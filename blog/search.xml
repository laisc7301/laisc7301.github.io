<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>[1080P] CCTV9 鲸鱼行走的时代——深时之旅 下载</title>
    <url>/blog/2023/04/06/202304022200%E9%B2%B8%E9%B1%BC%E8%A1%8C%E8%B5%B0%E7%9A%84%E6%97%B6%E4%BB%A3%E2%80%94%E2%80%94%E6%B7%B1%E6%97%B6%E4%B9%8B%E6%97%85/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304022200%E9%B2%B8%E9%B1%BC%E8%A1%8C%E8%B5%B0%E7%9A%84%E6%97%B6%E4%BB%A3%E2%80%94%E2%80%94%E6%B7%B1%E6%97%B6%E4%B9%8B%E6%97%85_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-6uk3kkroRzF"><a href="#阿里云盘：https-www-aliyundrive-com-s-6uk3kkroRzF" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/6uk3kkroRzF"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/6uk3kkroRzF">https://www.aliyundrive.com/s/6uk3kkroRzF</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/blog/2023/04/01/202304010000hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>[1080P] CCTV9 突破感官极限 全2集 下载</title>
    <url>/blog/2023/04/14/202304062100%E7%AA%81%E7%A0%B4%E6%84%9F%E5%AE%98%E6%9E%81%E9%99%90/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304062100%E7%AA%81%E7%A0%B4%E6%84%9F%E5%AE%98%E6%9E%81%E9%99%90_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-V5avBXRoxn4"><a href="#阿里云盘：https-www-aliyundrive-com-s-V5avBXRoxn4" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/V5avBXRoxn4"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/V5avBXRoxn4">https://www.aliyundrive.com/s/V5avBXRoxn4</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 动物守护行动 全5集 下载</title>
    <url>/blog/2023/04/14/202304071900%E5%8A%A8%E7%89%A9%E5%AE%88%E6%8A%A4%E8%A1%8C%E5%8A%A8/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304071900%E5%8A%A8%E7%89%A9%E5%AE%88%E6%8A%A4%E8%A1%8C%E5%8A%A81_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-4duzF7weFb9"><a href="#阿里云盘：https-www-aliyundrive-com-s-4duzF7weFb9" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/4duzF7weFb9"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/4duzF7weFb9">https://www.aliyundrive.com/s/4duzF7weFb9</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 辣椒的征途 全6集 下载</title>
    <url>/blog/2023/04/15/202304082000%E8%BE%A3%E6%A4%92%E7%9A%84%E5%BE%81%E9%80%94/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304082000%E8%BE%A3%E6%A4%92%E7%9A%84%E5%BE%81%E9%80%941_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-oPQZp3fgtNN"><a href="#阿里云盘：https-www-aliyundrive-com-s-oPQZp3fgtNN" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/oPQZp3fgtNN"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/oPQZp3fgtNN">https://www.aliyundrive.com/s/oPQZp3fgtNN</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 消失的尼安德特人 下载</title>
    <url>/blog/2023/04/12/202304092200%E6%B6%88%E5%A4%B1%E7%9A%84%E5%B0%BC%E5%AE%89%E5%BE%B7%E7%89%B9%E4%BA%BA/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304092200%E6%B6%88%E5%A4%B1%E7%9A%84%E5%B0%BC%E5%AE%89%E5%BE%B7%E7%89%B9%E4%BA%BA_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-8bVtELqbT3o"><a href="#阿里云盘：https-www-aliyundrive-com-s-8bVtELqbT3o" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/8bVtELqbT3o"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/8bVtELqbT3o">https://www.aliyundrive.com/s/8bVtELqbT3o</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 白水独龙江 下载</title>
    <url>/blog/2023/04/15/202304131920%E7%99%BD%E6%B0%B4%E7%8B%AC%E9%BE%99%E6%B1%9F/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304131920%E7%99%BD%E6%B0%B4%E7%8B%AC%E9%BE%99%E6%B1%9F_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-gbmfYoSzR2k"><a href="#阿里云盘：https-www-aliyundrive-com-s-gbmfYoSzR2k" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/gbmfYoSzR2k"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/gbmfYoSzR2k">https://www.aliyundrive.com/s/gbmfYoSzR2k</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 独闯贝加尔湖 下载</title>
    <url>/blog/2023/04/16/202304141920%E7%8B%AC%E9%97%AF%E8%B4%9D%E5%8A%A0%E5%B0%94%E6%B9%96/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304141920%E7%8B%AC%E9%97%AF%E8%B4%9D%E5%8A%A0%E5%B0%94%E6%B9%96_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-jLwkvQJHCtV"><a href="#阿里云盘：https-www-aliyundrive-com-s-jLwkvQJHCtV" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/jLwkvQJHCtV"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/jLwkvQJHCtV">https://www.aliyundrive.com/s/jLwkvQJHCtV</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 我与星空有个约会 全5集 下载</title>
    <url>/blog/2023/04/27/202304191950%E6%88%91%E4%B8%8E%E6%98%9F%E7%A9%BA%E6%9C%89%E4%B8%AA%E7%BA%A6%E4%BC%9A/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304191950%E6%88%91%E4%B8%8E%E6%98%9F%E7%A9%BA%E6%9C%89%E4%B8%AA%E7%BA%A6%E4%BC%9A1_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-R5YWufFyFTE"><a href="#阿里云盘：https-www-aliyundrive-com-s-R5YWufFyFTE" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/R5YWufFyFTE"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/R5YWufFyFTE">https://www.aliyundrive.com/s/R5YWufFyFTE</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 美食令（第二季） 全4集 下载</title>
    <url>/blog/2023/04/23/202304171920%E7%BE%8E%E9%A3%9F%E4%BB%A4%EF%BC%88%E7%AC%AC%E4%BA%8C%E5%AD%A3%EF%BC%89/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304171920%E7%BE%8E%E9%A3%9F%E4%BB%A4%EF%BC%88%E7%AC%AC%E4%BA%8C%E5%AD%A3%EF%BC%891_p2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-SmVZoMCy5Cs"><a href="#阿里云盘：https-www-aliyundrive-com-s-SmVZoMCy5Cs" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/SmVZoMCy5Cs"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/SmVZoMCy5Cs">https://www.aliyundrive.com/s/SmVZoMCy5Cs</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 书店，遇见你 全3集 下载</title>
    <url>/blog/2023/04/27/202304211920%E4%B9%A6%E5%BA%97%EF%BC%8C%E9%81%87%E8%A7%81%E4%BD%A0/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304211920%E4%B9%A6%E5%BA%97%EF%BC%8C%E9%81%87%E8%A7%81%E4%BD%A01_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-NG9wpVG9BGD"><a href="#阿里云盘：https-www-aliyundrive-com-s-NG9wpVG9BGD" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/NG9wpVG9BGD"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/NG9wpVG9BGD">https://www.aliyundrive.com/s/NG9wpVG9BGD</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 我在故宫修文物 全3集 下载</title>
    <url>/blog/2023/04/25/202304212000%E6%88%91%E5%9C%A8%E6%95%85%E5%AE%AB%E4%BF%AE%E6%96%87%E7%89%A9/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304212000%E6%88%91%E5%9C%A8%E6%95%85%E5%AE%AB%E4%BF%AE%E6%96%87%E7%89%A91_2.png"></p>
<h2 id="需要的请留下邮箱"><a href="#需要的请留下邮箱" class="headerlink" title="需要的请留下邮箱"></a>需要的请留下邮箱</h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 青春万岁 全7集 下载</title>
    <url>/blog/2023/05/06/202304281950%E9%9D%92%E6%98%A5%E4%B8%87%E5%B2%81/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304281950%E9%9D%92%E6%98%A5%E4%B8%87%E5%B2%811_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-dt5cKNDKRi1"><a href="#阿里云盘：https-www-aliyundrive-com-s-dt5cKNDKRi1" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/dt5cKNDKRi1"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/dt5cKNDKRi1">https://www.aliyundrive.com/s/dt5cKNDKRi1</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 跟史蒂芬·霍金一起探索宇宙 下载</title>
    <url>/blog/2023/04/27/202304232200%E8%B7%9F%E5%8F%B2%E8%92%82%E8%8A%AC%C2%B7%E9%9C%8D%E9%87%91%E4%B8%80%E8%B5%B7%E6%8E%A2%E7%B4%A2%E5%AE%87%E5%AE%99/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202304232200%E8%B7%9F%E5%8F%B2%E8%92%82%E8%8A%AC%C2%B7%E9%9C%8D%E9%87%91%E4%B8%80%E8%B5%B7%E6%8E%A2%E7%B4%A2%E5%AE%87%E5%AE%99_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-hUZYer91umU"><a href="#阿里云盘：https-www-aliyundrive-com-s-hUZYer91umU" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/hUZYer91umU"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/hUZYer91umU">https://www.aliyundrive.com/s/hUZYer91umU</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot显示图片</title>
    <url>/blog/2023/04/29/202304290000SpringBootShowPicture/</url>
    <content><![CDATA[<p>SpringBoot显示图片其实很简单，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/getimage&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getimage</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">    <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> ImageIO.read(Files.newInputStream(Paths.get(<span class="string">&quot;D:\\laiscdata\\1.png&quot;</span>)));</span><br><span class="line">    response.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-store,no-cache&quot;</span>);</span><br><span class="line">    response.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">    <span class="type">ServletOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">    ImageIO.write(image,<span class="string">&quot;jpg&quot;</span>,out);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 味道中山（第二季） 全4集 下载</title>
    <url>/blog/2023/05/06/202305011920%E5%91%B3%E9%81%93%E4%B8%AD%E5%B1%B1%EF%BC%88%E7%AC%AC%E4%BA%8C%E5%AD%A3%EF%BC%89/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202305011920%E5%91%B3%E9%81%93%E4%B8%AD%E5%B1%B1%EF%BC%88%E7%AC%AC%E4%BA%8C%E5%AD%A3%EF%BC%891_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-Vz2QZcznMrt"><a href="#阿里云盘：https-www-aliyundrive-com-s-Vz2QZcznMrt" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/Vz2QZcznMrt"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/Vz2QZcznMrt">https://www.aliyundrive.com/s/Vz2QZcznMrt</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 裸鼹鼠—对抗衰老的秘诀 下载</title>
    <url>/blog/2023/05/16/202305142100%E8%A3%B8%E9%BC%B9%E9%BC%A0%E2%80%94%E5%AF%B9%E6%8A%97%E8%A1%B0%E8%80%81%E7%9A%84%E7%A7%98%E8%AF%80/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202305142100%E8%A3%B8%E9%BC%B9%E9%BC%A0%E2%80%94%E5%AF%B9%E6%8A%97%E8%A1%B0%E8%80%81%E7%9A%84%E7%A7%98%E8%AF%80_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-2NgZn6rwBPC"><a href="#阿里云盘：https-www-aliyundrive-com-s-2NgZn6rwBPC" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/2NgZn6rwBPC"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/2NgZn6rwBPC">https://www.aliyundrive.com/s/2NgZn6rwBPC</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 伊比利亚猞猁 下载</title>
    <url>/blog/2023/05/17/202305142200%E4%BC%8A%E6%AF%94%E5%88%A9%E4%BA%9A%E7%8C%9E%E7%8C%81/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202305142200%E4%BC%8A%E6%AF%94%E5%88%A9%E4%BA%9A%E7%8C%9E%E7%8C%81_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-1tPgFyzFsby"><a href="#阿里云盘：https-www-aliyundrive-com-s-1tPgFyzFsby" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/1tPgFyzFsby"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/1tPgFyzFsby">https://www.aliyundrive.com/s/1tPgFyzFsby</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>Anaconda环境切换</title>
    <url>/blog/2023/05/19/202305190000Anaconda%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2/</url>
    <content><![CDATA[<h4 id="1、查看已有的虚拟环境"><a href="#1、查看已有的虚拟环境" class="headerlink" title="1、查看已有的虚拟环境"></a>1、查看已有的虚拟环境</h4><p>conda env list</p>
<h4 id="2、切换到想要的虚拟环境，这里我切换到mye"><a href="#2、切换到想要的虚拟环境，这里我切换到mye" class="headerlink" title="2、切换到想要的虚拟环境，这里我切换到mye"></a>2、切换到想要的虚拟环境，这里我切换到mye</h4><p>conda activate mye</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Python</category>
        <category>Anaconda</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Python</tag>
        <tag>Anaconda</tag>
      </tags>
  </entry>
  <entry>
    <title>Anaconda升级Python版本</title>
    <url>/blog/2023/05/21/202305210000Anaconda%E5%8D%87%E7%BA%A7Python%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<h4 id="1-首先需要切换到要升级的环境下，这里我切换到mye"><a href="#1-首先需要切换到要升级的环境下，这里我切换到mye" class="headerlink" title="1.首先需要切换到要升级的环境下，这里我切换到mye"></a>1.首先需要切换到要升级的环境下，这里我切换到mye</h4><p>conda activate mye</p>
<h4 id="2-然后升级python版本"><a href="#2-然后升级python版本" class="headerlink" title="2.然后升级python版本"></a>2.然后升级python版本</h4><p>conda update python</p>
<h4 id="3-如果想降级，比如降级到3-8，就这样写："><a href="#3-如果想降级，比如降级到3-8，就这样写：" class="headerlink" title="3.如果想降级，比如降级到3.8，就这样写："></a>3.如果想降级，比如降级到3.8，就这样写：</h4><p>conda install python&#x3D;3.8</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Python</category>
        <category>Anaconda</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Python</tag>
        <tag>Anaconda</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 揭秘极端天气 下载</title>
    <url>/blog/2023/05/30/202305282200%E6%8F%AD%E7%A7%98%E6%9E%81%E7%AB%AF%E5%A4%A9%E6%B0%94/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202305282200%E6%8F%AD%E7%A7%98%E6%9E%81%E7%AB%AF%E5%A4%A9%E6%B0%94_2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-fpnprXCPwBk"><a href="#阿里云盘：https-www-aliyundrive-com-s-fpnprXCPwBk" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/fpnprXCPwBk"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/fpnprXCPwBk">https://www.aliyundrive.com/s/fpnprXCPwBk</a></h2>]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>Adobe全家桶一键激活工具 Adobe-GenP-3.0.2</title>
    <url>/blog/2023/05/31/202305310000Adobe-GenP-3-0-2/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202305310000Adobe-GenP-3.0.2.png"></p>
<h2 id="阿里云盘：https-www-aliyundrive-com-s-US4ugBopvSU"><a href="#阿里云盘：https-www-aliyundrive-com-s-US4ugBopvSU" class="headerlink" title="阿里云盘：https://www.aliyundrive.com/s/US4ugBopvSU"></a>阿里云盘：<a href="https://www.aliyundrive.com/s/US4ugBopvSU">https://www.aliyundrive.com/s/US4ugBopvSU</a></h2>]]></content>
      <categories>
        <category>软件</category>
        <category>破解</category>
        <category>Adobe</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>破解</tag>
        <tag>Adobe</tag>
      </tags>
  </entry>
  <entry>
    <title>不让google.com跳转到google.com.hk</title>
    <url>/blog/2023/06/07/202306070000%E4%B8%8D%E8%AE%A9google-com%E8%B7%B3%E8%BD%AC%E5%88%B0google-com-hk/</url>
    <content><![CDATA[<p>解决办法很简单，只需访问一次 <a href="http://www.google.com/ncr">http://www.google.com/ncr</a> 即可。</p>
]]></content>
      <tags>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>Git常用命令小结</title>
    <url>/blog/2023/06/07/202306070001Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<style>
            .f1{
                font-size:40px;
                position: relative;
                top:-18px;
            }
            .redcolor{
                color:red;
            }
            .focus0{
                display: flex;
                align-items: center;/*垂直居中*/
                height:50px;
            }
            .focus1{
                font-size:30px;
                color:black;
            }
            .focus2{
                font-size:30px;
                color:red;
            }

</style>
<script>
            function myonopen(id){
                var myopen = document.getElementsByClassName("myopen"+id)[0];
                var myclose = document.getElementsByClassName("myclose"+id)[0];
                var myc = document.getElementsByClassName("myc"+id)[0];
                myopen.style.display="none";
                myclose.style.display="block";
                myc.style.display="block";
            };
            function myonclose(id){
                var myopen = document.getElementsByClassName("myopen"+id)[0];
                var myclose = document.getElementsByClassName("myclose"+id)[0];
                var myc = document.getElementsByClassName("myc"+id)[0];
                myopen.style.display="block";
                myclose.style.display="none";
                myc.style.display="none";
            };
            function myonload(id){

                for(let i=0;i<id;i++){
                    var myclose = document.getElementsByClassName("myclose"+i)[0];
                    var myc = document.getElementsByClassName("myc"+i)[0];
                    myclose.style.display="none";
                    myc.style.display="none";
                }
                
            };

</script>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;John Doe&quot;</span></span><br><span class="line">git config --global user.email johndoe@example.com</span><br></pre></td></tr></table></figure>

<p>设置用户名称与邮件地址</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global core.editor <span class="string">&quot;&#x27;C:\Program Files\Notepad++\notepad++.exe&#x27; -multiInst -notabbar -nosession -noPlugin&quot;</span></span><br></pre></td></tr></table></figure>


<p>设置默认文本编辑器</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure>

<p>列出所有 Git 当时能找到的配置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>


<p>在现有目录中初始化仓库</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202306070000收藏_red.svg" alt="" width="50" height="50" align=left><div class="focus0"><span class="focus1">重点</span><span class="focus2">↓</span></div><br/></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git add *.c</span><br><span class="line">git add LICENSE</span><br></pre></td></tr></table></figure>

<p> 开始对指定文件的跟踪<br> 或 更新文件到暂存区</p>
<span id="more"></span>

<div class="myexpand">
<div class="myopen0" onclick="myonopen(0)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000展开.svg" alt="" width="50" height="50" align=left><span class="f1">展开</span>
</div>

<div class="myclose0" onclick="myonclose(0)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000收起.svg" alt="" width="50" height="50" align=left><span class="f1">收起</span>
</div>
</div>
        
<div class="myc0">
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">将此目录和子目录的文件全部更新到暂存区（用.gitignore 忽略的文件除外）</span><br><span class="line">git add *</span><br><span class="line">将此目录和子目录的文件全部更新到暂存区（用.gitignore 忽略的文件除外）(不更新.gitignore文件)</span><br><span class="line">git add *.txt</span><br><span class="line">将此目录符合条件的更新到暂存区</span><br><span class="line">git add 文件夹/</span><br><span class="line">将整个文件夹及其内容更新到暂存区</span><br><span class="line">git add [正则表达式]</span><br><span class="line">用正则表达式将符合条件的更新到暂存区</span><br></pre></td></tr></table></figure>
</div>








<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>

<p> 查看文件暂存状态</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git status -s</span><br></pre></td></tr></table></figure>


<p>查看文件暂存状态简览</p>
<p>文件.gitignore 忽略文件</p>
<div class="myexpand">
<div class="myopen1" onclick="myonopen(1)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000展开.svg" alt="" width="50" height="50" align=left><span class="f1">展开</span>
</div>

<div class="myclose1" onclick="myonclose(1)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000收起.svg" alt="" width="50" height="50" align=left><span class="f1">收起</span>
</div>
</div>
        
<div class="myc1">




<p>忽略文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> .gitignore </span><br><span class="line">*.[oa] </span><br><span class="line">*~</span><br></pre></td></tr></table></figure>

<p>第一行告诉 Git 忽略所有以 .o 或 .a 结尾的文件。一般这类对象文件和存档文件都是编译过程中出现的。 第二 行告诉 Git 忽略所有以波浪符（~）结尾的文件，许多文本编辑软件（比如 Emacs）都用这样的文件名保存副 本。 </p>
<p> 文件 <span class="redcolor">.gitignore</span> 的格式规范如下：<br> • 所有空行或者以 <span class="redcolor">＃</span>  开头的行都会被 Git 忽略。<br> • 可以使用标准的 glob 模式匹配。<br> • 匹配模式可以以（<span class="redcolor">&#x2F;</span>）开头防止递归。<br> • 匹配模式可以以（<span class="redcolor">&#x2F;</span>）结尾指定目录。<br> • 要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（<span class="redcolor">!</span>）取反。</p>
<p>所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。 星号（<span class="redcolor">*</span>）匹配零个或多个任意字符；<span class="redcolor">[abc]</span> 匹配 任何一个列在方括号中的字符（这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）；问号（<span class="redcolor">?</span> ）只匹配一个任意字符；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配 （比如 <span class="redcolor">[0-9]</span> 表示匹配所有 0 到 9 的数字）。 使用两个星号（<span class="redcolor">*</span>) 表示匹配任意中间目录，比如 <span class="redcolor">a&#x2F;**&#x2F;z</span> 可以匹配 <span class="redcolor">a&#x2F;z</span> , <span class="redcolor">a&#x2F;b&#x2F;z</span> 或 <span class="redcolor">a&#x2F;b&#x2F;c&#x2F;z</span> 等。 </p>
<p> 我们再看一个 .gitignore 文件的例子：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># no .a files</span></span><br><span class="line">*.a</span><br><span class="line"></span><br><span class="line"><span class="comment"># but do track lib.a, even though you&#x27;re ignoring .a files above</span></span><br><span class="line">!lib.a</span><br><span class="line"></span><br><span class="line"><span class="comment"># only ignore the TODO file in the current directory, not subdir/TODO</span></span><br><span class="line">/TODO</span><br><span class="line"></span><br><span class="line"><span class="comment"># ignore all files in the build/ directory</span></span><br><span class="line">build/</span><br><span class="line"></span><br><span class="line"><span class="comment"># ignore doc/notes.txt, but not doc/server/arch.txt</span></span><br><span class="line">doc/*.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># ignore all .pdf files in the doc/ directory</span></span><br><span class="line">doc/**/*.pdf</span><br></pre></td></tr></table></figure>

<p>TIP: GitHub 有一个十分详细的针对数十种项目及语言的 .gitignore 文件列表，你可以在 <a href="https://github.com/github/gitignore">https://github.com/github/gitignore</a> 找到它.</p>
</div>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure>
<p>通过文件补丁的格式查看已暂存和未暂存的变化，显示具体哪些行发生了改变。</p>
<div class="myexpand">
<div class="myopen2" onclick="myonopen(2)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000展开.svg" alt="" width="50" height="50" align=left><span class="f1">展开</span>
</div>

<div class="myclose2" onclick="myonclose(2)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000收起.svg" alt="" width="50" height="50" align=left><span class="f1">收起</span>
</div>
</div>
        

<div class="myc2">

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git diff --staged</span><br></pre></td></tr></table></figure>
<p>查看已暂存的将要添加到下次提交里的内容。 </p>
</div>

<p><img src="https://laisc7301.github.io/files/img/2023/202306070000收藏_red.svg" alt="" width="50" height="50" align=left><div class="focus0"><span class="focus1">重点</span><span class="focus2">↓</span></div><br/></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git commit</span><br></pre></td></tr></table></figure>
<p>提交更新</p>
<div class="myexpand">
<div class="myopen3" onclick="myonopen(3)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000展开.svg" alt="" width="50" height="50" align=left><span class="f1">展开</span>
</div>

<div class="myclose3" onclick="myonclose(3)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000收起.svg" alt="" width="50" height="50" align=left><span class="f1">收起</span>
</div>
</div>
        
<div class="myc3">

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure>
<p>重新提交并覆盖上一次提交的数据 </p>
</div>


<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">rm</span></span><br></pre></td></tr></table></figure>
<p>从 Git 中移除某个文件</p>
<div class="myexpand">
<div class="myopen4" onclick="myonopen(4)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000展开.svg" alt="" width="50" height="50" align=left><span class="f1">展开</span>
</div>

<div class="myclose4" onclick="myonclose(4)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000收起.svg" alt="" width="50" height="50" align=left><span class="f1">收起</span>
</div>
</div>
        
<div class="myc4">

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">rm</span> --cached README</span><br></pre></td></tr></table></figure>

<p>当我们想把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。 换句话说，你想让文件保留在磁盘但是并不想让 Git 继续跟踪。可以使用这种方法。 </p>
</div>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">mv</span> file_from file_to</span><br></pre></td></tr></table></figure>
<p>移动文件&#x2F;重命名文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<p>查看提交历史</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure>
<p>撤消操作：重新提交并代替上一次提交结果</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git reset HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure>
<p>取消暂存文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git checkout -- [file]</span><br></pre></td></tr></table></figure>
<p>撤消对文件的修改</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure>
<p>克隆仓库</p>
<div class="myexpand">
<div class="myopen5" onclick="myonopen(5)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000展开.svg" alt="" width="50" height="50" align=left><span class="f1">展开</span>
</div>

<div class="myclose5" onclick="myonclose(5)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000收起.svg" alt="" width="50" height="50" align=left><span class="f1">收起</span>
</div>
</div>
        
<div class="myc5">

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/libgit2/libgit2 mylibgit</span><br></pre></td></tr></table></figure>
<p>如果你想在克隆远程仓库的时候，自定义本地仓库的名字，你可以使用此命令。</p>
</div>


<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git branch (branchname)</span><br></pre></td></tr></table></figure>
<p>创建分支</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git checkout (branchname)</span><br></pre></td></tr></table></figure>
<p>切换分支</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git merge</span><br></pre></td></tr></table></figure>
<p>合并分支</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure>
<p>列出分支</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure>
<p>列出标签</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git tag -a &lt;标签名字&gt;</span><br><span class="line">git tag -a &lt;标签名字&gt; -m &lt;提交信息&gt;</span><br></pre></td></tr></table></figure>
<p>创建附注标签</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git tag &lt;标签名字&gt;</span><br></pre></td></tr></table></figure>
<p>创建轻量标签</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail@example.com&quot;</span></span><br></pre></td></tr></table></figure>
<p>配置验证信息：生成SSH Key<br>会在~&#x2F;下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。<br>验证是否配置成功：ssh -T <a href="mailto:&#103;&#105;&#116;&#64;&#103;&#105;&#x74;&#x68;&#x75;&#98;&#46;&#x63;&#x6f;&#x6d;">&#103;&#105;&#116;&#64;&#103;&#105;&#x74;&#x68;&#x75;&#98;&#46;&#x63;&#x6f;&#x6d;</a><br>更多帮助：<a href="https://help.github.com/cn/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">https://help.github.com/cn/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent</a></p>
<p><img src="https://laisc7301.github.io/files/img/2023/202306070000收藏_red.svg" alt="" width="50" height="50" align=left><div class="focus0"><span class="focus1">重点</span><span class="focus2">↓</span></div><br/></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git push &lt;远端仓库路径&gt;   &lt;分支名&gt;</span><br></pre></td></tr></table></figure>
<p>将文件推送到远程仓库</p>
<div class="myexpand">
<div class="myopen6" onclick="myonopen(6)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000展开.svg" alt="" width="50" height="50" align=left><span class="f1">展开</span>
</div>

<div class="myclose6" onclick="myonclose(6)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000收起.svg" alt="" width="50" height="50" align=left><span class="f1">收起</span>
</div>
</div>
<div class="myc6">

<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git push -u &lt;远端仓库路径&gt; master</span><br></pre></td></tr></table></figure>
<p>将本地的master分支推送到远端仓库，同时指定该远端仓库为默认主机，后面就可以不加任何参数使用git push了。</p>
</div>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git remote add [shortname] [url]</span><br></pre></td></tr></table></figure>
<p>指定一个简单的名字，以便将来引用该仓库<br>如：git remote add origin <a href="mailto:&#x67;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#x62;&#46;&#99;&#111;&#109;">&#x67;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#x62;&#46;&#99;&#111;&#109;</a>:mojombo&#x2F;grit.git</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure>
<p>执行时加上 -v 参数，你还可以看到每个别名的实际链接地址。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git remote <span class="built_in">rm</span> [别名]</span><br></pre></td></tr></table></figure>
<p>移除引用</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git remote rename &lt;原别名&gt;  &lt;新别名&gt;</span><br></pre></td></tr></table></figure>
<p>重命名引用的名字</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git fetch</span><br></pre></td></tr></table></figure>
<p>从远程仓库下载新分支与数据</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>
<p> 从远端仓库提取数据并尝试合并到当前分支</p>
<div class="myexpand">
<div class="myopen7" onclick="myonopen(7)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000展开.svg" alt="" width="50" height="50" align=left><span class="f1">展开</span>
</div>

<div class="myclose7" onclick="myonclose(7)">
<img src="https://laisc7301.github.io/files/img/2023/202306070000收起.svg" alt="" width="50" height="50" align=left><span class="f1">收起</span>
</div>
</div>
<div class="myc7">

<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git pull &lt;远端仓库路径&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br></pre></td></tr></table></figure>
<p>将远端仓库中的远程分支合并到本地分支</p>
</div>




<script>
myonload(8);
</script>]]></content>
      <categories>
        <category>编程</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>余华短篇小说集 下载</title>
    <url>/blog/2023/06/08/202306080000%E4%BD%99%E5%8D%8E%E7%9F%AD%E7%AF%87%E5%B0%8F%E8%AF%B4%E9%9B%86/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202306080000%E4%BD%99%E5%8D%8E%E7%9F%AD%E7%AF%87%E5%B0%8F%E8%AF%B4%E9%9B%86.png"></p>
<p>下载地址：<a href="https://laisc7301.github.io/files/files/2023/202306080000%E4%BD%99%E5%8D%8E%E7%9F%AD%E7%AF%87%E5%B0%8F%E8%AF%B4%E9%9B%86_%E5%B7%B2%E6%95%B4%E7%90%86.zip">https://laisc7301.github.io/files/files/2023/202306080000%E4%BD%99%E5%8D%8E%E7%9F%AD%E7%AF%87%E5%B0%8F%E8%AF%B4%E9%9B%86_%E5%B7%B2%E6%95%B4%E7%90%86.zip</a></p>
]]></content>
      <categories>
        <category>文学</category>
        <category>小说</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>小说</tag>
        <tag>余华</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot实现文件上传</title>
    <url>/blog/2023/06/09/202306090000SpringBoot%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<p>下面是用SpringBoot完成文件上传的代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/upload&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UploadController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">httpUpload</span><span class="params">(<span class="meta">@RequestParam(&quot;files&quot;)</span> MultipartFile files[])</span>&#123;</span><br><span class="line">        String uploadFilePath=<span class="string">&quot;D:\\laiscdata&quot;</span>;</span><br><span class="line">        JSONObject object=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;files.length;i++)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> files[i].getOriginalFilename();  <span class="comment">// 文件名</span></span><br><span class="line">            <span class="type">File</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(uploadFilePath +<span class="string">&#x27;\\&#x27;</span>+ fileName);</span><br><span class="line">            <span class="keyword">if</span> (!dest.getParentFile().exists()) &#123;</span><br><span class="line">                dest.getParentFile().mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                files[i].transferTo(dest);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;程序错误：&quot;</span>+e);</span><br><span class="line">                object.put(<span class="string">&quot;success&quot;</span>,<span class="number">2</span>);</span><br><span class="line">                object.put(<span class="string">&quot;result&quot;</span>,<span class="string">&quot;程序错误，请重新上传&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> object.toString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        object.put(<span class="string">&quot;success&quot;</span>,<span class="number">1</span>);</span><br><span class="line">        object.put(<span class="string">&quot;result&quot;</span>,<span class="string">&quot;文件上传成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> object.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面的代码看起来有点多，其实就是一个上传的方法，首先通过 MultipartFile 接收文件。这里我用的是file[] 数组接收文件，这是为了兼容多文件上传的情况，如果只用file 接收，然后在接口上传多个文件的话，只会接收最后一个文件。这里大家注意一下。看自己的需求，我这里兼容多文件所以用数组接收。</p>
<span id="more"></span>

<p>然后遍历files 获取文件，下面这段代码是判断文件在所在目录是否存在，如果不存在就创建对应的目录。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">File</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(uploadFilePath +<span class="string">&#x27;\\&#x27;</span>+ fileName);</span><br><span class="line"><span class="keyword">if</span> (!dest.getParentFile().exists()) &#123;</span><br><span class="line">    dest.getParentFile().mkdirs();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下面就是将文件存放到对应的服务器，这里有一点需要说明一下，如果我们上传重复的文件会怎么样么？上传重复的文件不会报错，后上传的文件会直接覆盖已经上传的文件。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">files[i].transferTo(dest);</span><br></pre></td></tr></table></figure>



<p>测试：</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202306090000SpringBoot%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.png"></p>
<p>下面是HTML的代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span> <span class="attr">action</span>=<span class="string">&quot;http://localhost:8088/upload/upload&quot;</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请选择要上传的文件：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;files&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot实现文件下载</title>
    <url>/blog/2023/06/09/202306090000SpringBoot%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<p>下面是用SpringBoot完成文件下载的代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/download&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DownloadController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/download&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">fileDownLoad</span><span class="params">(HttpServletResponse response, <span class="meta">@RequestParam(&quot;fileName&quot;)</span> String fileName)</span>&#123;</span><br><span class="line">        String downloadFilePath=<span class="string">&quot;D:\\laiscdata&quot;</span>;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(downloadFilePath +<span class="string">&#x27;\\&#x27;</span>+ fileName);</span><br><span class="line">        <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;下载文件不存在&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        response.reset();</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/octet-stream&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setContentLength((<span class="type">int</span>) file.length());</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + fileName );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>(<span class="type">BufferedInputStream</span> <span class="variable">bis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file));) &#123;</span><br><span class="line">            <span class="type">byte</span>[] buff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">OutputStream</span> <span class="variable">os</span>  <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((i = bis.read(buff)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                os.write(buff, <span class="number">0</span>, i);</span><br><span class="line">                os.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;程序错误：&quot;</span>+e);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;下载失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;下载成功&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试：访问<a href="http://localhost:8088/download/download?fileName=1.zip">http://localhost:8088/download/download?fileName=1.zip</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 毕加索的艺术蜕变之路 下载</title>
    <url>/blog/2023/06/12/202306092100%E6%AF%95%E5%8A%A0%E7%B4%A2%E7%9A%84%E8%89%BA%E6%9C%AF%E8%9C%95%E5%8F%98%E4%B9%8B%E8%B7%AF/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202306092100%E6%AF%95%E5%8A%A0%E7%B4%A2%E7%9A%84%E8%89%BA%E6%9C%AF%E8%9C%95%E5%8F%98%E4%B9%8B%E8%B7%AF_2.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/evy5iZx63So">https://www.aliyundrive.com/s/evy5iZx63So</a></p>
]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>[转] [576P] 肖申克的救赎 下载</title>
    <url>/blog/2023/06/14/202306140000%E8%82%96%E7%94%B3%E5%85%8B%E7%9A%84%E6%95%91%E8%B5%8E/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202306140000The.Shawshank.Redemption.1994.%E8%82%96%E7%94%B3%E5%85%8B%E7%9A%84%E6%95%91%E8%B5%8E.%E5%8F%8C%E8%AF%AD%E5%AD%97%E5%B9%95_2.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/jWdn7d8ZDmU">https://www.aliyundrive.com/s/jWdn7d8ZDmU</a></p>
]]></content>
      <categories>
        <category>视频</category>
        <category>电影</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>[转] [800P] 断片之险途夺宝 下载</title>
    <url>/blog/2023/06/14/202306140001%E6%96%AD%E7%89%87%E4%B9%8B%E9%99%A9%E9%80%94%E5%A4%BA%E5%AE%9D/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202306140001%E6%96%AD%E7%89%87%E4%B9%8B%E9%99%A9%E9%80%94%E5%A4%BA%E5%AE%9D_2.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/NuhddZUJikc">https://www.aliyundrive.com/s/NuhddZUJikc</a></p>
]]></content>
      <categories>
        <category>视频</category>
        <category>电影</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>[转] [816P] 蜻蜓少年 下载</title>
    <url>/blog/2023/06/15/202306150000%E8%9C%BB%E8%9C%93%E5%B0%91%E5%B9%B4/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202306150000%E8%9C%BB%E8%9C%93%E5%B0%91%E5%B9%B4.Rural.Summer.Vacation.2019.%E5%9B%BD%E8%AF%AD%E4%B8%AD%E5%AD%97_2.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/9DJzGFvyzG6">https://www.aliyundrive.com/s/9DJzGFvyzG6</a></p>
]]></content>
      <categories>
        <category>视频</category>
        <category>电影</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>余华中篇小说集 下载</title>
    <url>/blog/2023/06/16/202306160000%E4%BD%99%E5%8D%8E%E4%B8%AD%E7%AF%87%E5%B0%8F%E8%AF%B4%E9%9B%86/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202306160000%E4%BD%99%E5%8D%8E%E4%B8%AD%E7%AF%87%E5%B0%8F%E8%AF%B4%E9%9B%86.png"></p>
<p>下载地址：<a href="https://laisc7301.github.io/files/files/2023/202306150000%E4%BD%99%E5%8D%8E%E4%B8%AD%E7%AF%87%E5%B0%8F%E8%AF%B4%E9%9B%86_%E5%B7%B2%E6%95%B4%E7%90%86.zip">https://laisc7301.github.io/files/files/2023/202306150000%E4%BD%99%E5%8D%8E%E4%B8%AD%E7%AF%87%E5%B0%8F%E8%AF%B4%E9%9B%86_%E5%B7%B2%E6%95%B4%E7%90%86.zip</a></p>
]]></content>
      <categories>
        <category>文学</category>
        <category>小说</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>小说</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080P] CCTV9 海昏候 全3集 下载</title>
    <url>/blog/2023/06/19/202306162000%E6%B5%B7%E6%98%8F%E5%80%99/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202306162000%E6%B5%B7%E6%98%8F%E5%80%991_2.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/HLHQoVZgFXo">https://www.aliyundrive.com/s/HLHQoVZgFXo</a></p>
]]></content>
      <categories>
        <category>视频</category>
        <category>纪录片</category>
        <category>CCTV9</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>纪录片</tag>
        <tag>CCTV9</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux启动后自动运行脚本</title>
    <url>/blog/2023/07/02/202307020000Termux%E5%90%AF%E5%8A%A8%E5%90%8E%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>在Termux中输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nano  ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>里面的内容就是打开新会话时自动执行的脚本。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Android</category>
        <category>Termux</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Android</tag>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot创建项目</title>
    <url>/blog/2023/07/06/202307060000SpringBoot%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<p>按照以下的步骤创建项目：</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202307060000_SpringBoot%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE1.png"></p>
<p><img src="https://laisc7301.github.io/files/img/2023/202307060000_SpringBoot%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE2.png"></p>
<p>然后在 application.properties 文件中写入以下内容：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.thymeleaf.prefix</span>=classpath:/templates/</span><br><span class="line"><span class="attr">server.port</span>=<span class="number">8010</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">spring.servlet.multipart.max-file-size</span>=<span class="number">100</span>MB</span><br><span class="line"><span class="attr">spring.servlet.multipart.max-request-size</span>=<span class="number">1000</span>MB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">spring.datasource.url</span>=jdbc:mysql://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">3306</span>/paper?characterEncoding=utf-<span class="number">8</span>&amp;useSSL=<span class="literal">false</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=com.mysql.cj.jdbc.Driver</span><br><span class="line"><span class="attr">spring.datasource.username</span>=root</span><br><span class="line"><span class="attr">spring.datasource.password</span>=yourpassword</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=classpath:mapper/*.xml</span><br><span class="line"><span class="attr">mybatis.configuration.map-underscore-to-camel-case</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>最后创建相关目录：</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202307060000_SpringBoot%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE3.png"></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>如何运行.jar文件</title>
    <url>/blog/2023/07/06/202307060001%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C.jar%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>像这样运行命令即可：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">java -jar test.jar</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux重置MariaDB(MySQL)密码</title>
    <url>/blog/2023/07/08/202307080000Termux%E9%87%8D%E7%BD%AEMariaDB(MySQL)%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<p>按顺序执行命令即可：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;</span><br><span class="line"></span><br><span class="line">mysql -u root</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">set password for &#x27;root&#x27;@&#x27;localhost&#x27;=password(&#x27;123456&#x27;);</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;uesrname&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;password&#x27; WITH GRANT OPTION;#添加可以被外网访问的用户</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>





<p>重启设备，如果打开mysql出错，提示<code>ERROR 2002 (HY000): Can&#39;t connect to local server through socket &#39;/data/data/com.termux/files/usr/var/run/mysqld.sock&#39; (2)</code>，使用以下命令启动mysql：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nohup</span> mysqld &amp;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>Termux</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux用Termux-services设置自启动项</title>
    <url>/blog/2023/07/08/202307080001Termux%E7%94%A8Termux-services%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%90%AF%E5%8A%A8%E9%A1%B9/</url>
    <content><![CDATA[<p>安装Termux-services：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pkg install termux-services -y</span><br></pre></td></tr></table></figure>

<p>配置Termux-services下的服务启动文件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$PREFIX</span>/var/service/服务名</span><br><span class="line">vim <span class="variable">$PREFIX</span>/var/service/服务名/run</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<p>将下面命令粘贴进<code>$PREFIX/var/service/服务名/run</code>文件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/data/data/com.termux/files/usr/bin/sh</span></span><br><span class="line"><span class="built_in">exec</span> 启动命令 &amp;</span><br></pre></td></tr></table></figure>

<p>配置服务日志文件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$PREFIX</span>/var/service/服务名/log</span><br><span class="line">vim <span class="variable">$PREFIX</span>/var/service/服务名/log/run</span><br></pre></td></tr></table></figure>

<p>将下面命令粘贴进<code>$PREFIX/var/service/服务名/log/run</code>文件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/data/data/com.termux/files/usr/bin/sh</span></span><br><span class="line">svlogger=<span class="string">&quot;/data/data/com.termux/files/usr/share/termux-services/svlogger&quot;</span></span><br><span class="line"><span class="built_in">exec</span> <span class="string">&quot;<span class="variable">$&#123;svlogger&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>保存，赋予脚本执行权限：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x <span class="variable">$PREFIX</span>/var/service/服务名/run &amp;&amp;<span class="built_in">chmod</span> +x <span class="variable">$PREFIX</span>/var/service/服务名/log/run</span><br></pre></td></tr></table></figure>

<p>相关命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sv-enable 服务名		<span class="comment">#将服务设为自启动</span></span><br><span class="line">sv-disable 服务名		<span class="comment">#取消自启动</span></span><br><span class="line">sv down 服务名			<span class="comment">#临时关闭自启动服务，本次Termux运行过程中将不再重启</span></span><br><span class="line">						<span class="comment">#但不会关闭正在运行的服务</span></span><br><span class="line">pkill 服务名			<span class="comment">#杀死服务，但如果自启动为生效状态，服务会立即重启</span></span><br><span class="line">sv up 服务名			<span class="comment">#启动服务，同时使自启动设置生效</span></span><br><span class="line">sv start 服务名		<span class="comment">#临时启动服务，但不改变自启动设置状态</span></span><br><span class="line">sv status 服务名		<span class="comment">#查看服务运行状态</span></span><br></pre></td></tr></table></figure>

<p>日志文件在<code>$PREFIX/var/log/sv/服务名/current</code>中。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Termux</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot处理动态URL</title>
    <url>/blog/2023/07/08/202307080002SpringBoot%E5%A4%84%E7%90%86%E5%8A%A8%E6%80%81URL/</url>
    <content><![CDATA[<p>可以像下面这样写：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/info/&#123;id&#125;/&#123;username&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">info</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id, <span class="meta">@PathVariable(&quot;username&quot;)</span> String username)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> id.toString()+<span class="string">&quot; : &quot;</span>+username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot生成验证码</title>
    <url>/blog/2023/07/10/202307100000SpringBoot%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    <content><![CDATA[<p>这样写代码：</p>
<p>ValidateCodeUtil.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.wisefire_read.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ValidateCodeUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> <span class="number">165</span>; <span class="comment">//验证码的宽</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">45</span>; <span class="comment">//验证码的高</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">lineSize</span> <span class="operator">=</span> <span class="number">30</span>; <span class="comment">//验证码中夹杂的干扰线数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">lineLength</span> <span class="operator">=</span> <span class="number">20</span>; <span class="comment">//验证码中夹杂的干扰线长度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">randomStrNum</span> <span class="operator">=</span> <span class="number">4</span>; <span class="comment">//验证码字符个数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">colorMin</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//颜色最低值</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">colorMax</span> <span class="operator">=</span> <span class="number">127</span>; <span class="comment">//颜色最高值</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">randomString</span> <span class="operator">=</span> <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWSYZ&quot;</span>;</span><br><span class="line">    <span class="type">Font</span> <span class="variable">font</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;Times New Roman&quot;</span>, Font.ROMAN_BASELINE, <span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Color <span class="title function_">getRandomColor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*(colorMax-colorMin+<span class="number">1</span>)+colorMin);</span><br><span class="line">        <span class="type">int</span> <span class="variable">g</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*(colorMax-colorMin+<span class="number">1</span>)+colorMin);</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*(colorMax-colorMin+<span class="number">1</span>)+colorMin);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Color</span>(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">drawLine</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> random.nextInt(width);</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> random.nextInt(height);</span><br><span class="line">        <span class="type">int</span> <span class="variable">xl</span> <span class="operator">=</span> random.nextInt(lineLength);</span><br><span class="line">        <span class="type">int</span> <span class="variable">yl</span> <span class="operator">=</span> random.nextInt(lineLength);</span><br><span class="line">        g.drawLine(x, y, x + xl, y + yl);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BufferedImage <span class="title function_">getRandomCodeImage</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(width, height, BufferedImage.TYPE_INT_BGR);</span><br><span class="line">        <span class="type">Graphics</span> <span class="variable">g</span> <span class="operator">=</span> image.getGraphics();</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        g.setColor(getRandomColor());</span><br><span class="line">        g.setFont(font);</span><br><span class="line">        <span class="comment">// 干扰线</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; lineSize; i++) &#123;</span><br><span class="line">            drawLine(g);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 随机字符</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">randomStr</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; randomStrNum; i++) &#123;</span><br><span class="line">            g.setFont(font);</span><br><span class="line">            g.setColor(getRandomColor());</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> String.valueOf(randomString.charAt(random.nextInt(randomString.length())));</span><br><span class="line">            g.translate(random.nextInt(<span class="number">3</span>), random.nextInt(<span class="number">6</span>));</span><br><span class="line">            g.drawString(str, <span class="number">40</span> * i + <span class="number">10</span>, <span class="number">25</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        g.dispose();</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>ValidateCodeController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.wisefire_read.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/validatecode&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ValidateCodeController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/showcode&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getRandomCodeImage</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            response.setContentType(<span class="string">&quot;image/png&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Expire&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">            <span class="type">ValidateCodeUtil</span> <span class="variable">validateCode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ValidateCodeUtil</span>();</span><br><span class="line"></span><br><span class="line">            <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> validateCode.getRandomCodeImage();</span><br><span class="line">            ImageIO.write(image, <span class="string">&quot;PNG&quot;</span>, response.getOutputStream());</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux保持后台运行</title>
    <url>/blog/2023/07/20/202307200000Termux%E4%BF%9D%E6%8C%81%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/</url>
    <content><![CDATA[<p>在termux中输入<br>termux-wake-unlock<br>即可</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Termux</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux安装pure-ftpd</title>
    <url>/blog/2023/07/20/202307200001Termux%E5%AE%89%E8%A3%85pure-ftpd/</url>
    <content><![CDATA[<p>输入以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pkg install pure-ftpd</span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line"></span><br><span class="line">pure-pw useradd laiscdata -u 1001 -g 1001 -d /data/data/com.termux</span><br><span class="line"><span class="comment">#建立用户，用户名 laiscdata ，用户uid 1001 ，用户gid 1001 ，用户根目录 /data/data/com.termux，这里回车后需要设置密码，输入两遍</span></span><br><span class="line"></span><br><span class="line">pure-pw mkdb</span><br><span class="line"><span class="comment">#建立数据库，每次更改完密码都要重建一次数据库</span></span><br><span class="line"></span><br><span class="line">pure-ftpd -B -E -l puredb:<span class="variable">$PREFIX</span>/etc/pureftpd.pdb -S 0.0.0.0,3721</span><br><span class="line"><span class="comment">#启动 -B 后台运行 -E 禁止匿名登陆 -l 配置文件位置 -S 绑定ip和端口</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>Termux</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title>[1080i] 成都大运会开幕式 下载</title>
    <url>/blog/2023/08/06/202308060000%E6%88%90%E9%83%BD%E5%A4%A7%E8%BF%90%E4%BC%9A%E5%BC%80%E5%B9%95%E5%BC%8F/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202308060000Chengdu.2021.FISU.World.University.Games.Opening.Ceremony.20230728.1080i.FEED.H.264-FLTTH_2.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/WQ1xERFTbHw">https://www.aliyundrive.com/s/WQ1xERFTbHw</a></p>
]]></content>
      <categories>
        <category>视频</category>
        <category>运动会</category>
        <category>开幕式</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>运动会</tag>
        <tag>开幕式</tag>
      </tags>
  </entry>
  <entry>
    <title>[792p] 过昭关 下载</title>
    <url>/blog/2023/08/08/202308080000%E8%BF%87%E6%98%AD%E5%85%B3/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202308080000%E8%BF%87%E6%98%AD%E5%85%B3_2.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/wFcifhbpSwW">https://www.aliyundrive.com/s/wFcifhbpSwW</a></p>
]]></content>
      <categories>
        <category>视频</category>
        <category>电影</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>[720p] 极盗者 下载</title>
    <url>/blog/2023/08/26/202308260000%E6%9E%81%E7%9B%97%E8%80%85/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202308260000%E6%9E%81%E7%9B%97%E8%80%85_2.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/mnp2XmgRrqC">https://www.aliyundrive.com/s/mnp2XmgRrqC</a></p>
]]></content>
      <categories>
        <category>视频</category>
        <category>电影</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>FL笛子插件RECsoprano</title>
    <url>/blog/2023/09/03/202309030000FL%E7%AC%9B%E5%AD%90%E6%8F%92%E4%BB%B6RECsoprano/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202309030000FL%E6%8F%92%E4%BB%B6RECsoprano.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/2qx2LtgipGQ">https://www.aliyundrive.com/s/2qx2LtgipGQ</a></p>
]]></content>
      <categories>
        <category>音乐</category>
        <category>软件</category>
        <category>FL Studio</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>音乐</tag>
        <tag>FL Studio</tag>
      </tags>
  </entry>
  <entry>
    <title>kali设置语言</title>
    <url>/blog/2023/09/01/202309010000kali%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%80/</url>
    <content><![CDATA[<p>1.系统语言为默认英文，现在打开Terminal Emulator 界面。</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309010000kali%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%801.png"></p>
<span id="more"></span>

<p>2.用root用户启动Terminal Emulator，并在Terminal Emulator 中执行<code>dpkg-reconfigure locales</code>命令。</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309010001kali%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%802.png"></p>
<p>3.找到<code>[ ] zh-CN.UTF-8 UTF-8</code>选项，使用空格将<code>[ ] zh-CN.UTF-8 UTF-8</code>勾选上。</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309010002kali%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%803.png"></p>
<p>4.在此处选择zh_CN.UTF-8字符编码，在&lt;0k&gt; 处按空格键进行确认 ，并完成相关配置操作</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309010003kali%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%804.png"></p>
<p>5.配置完毕以后，重启系统使配置其生效。</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309010004kali%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%805.png"></p>
]]></content>
      <categories>
        <category>软件</category>
        <category>系统</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title>FL Studio Producer Edition 21.1.0 Build 3713 破解版 下载</title>
    <url>/blog/2023/09/06/202309060000FL_Studio_Producer_Edition_21.1.0_Build_3713_%E7%A0%B4%E8%A7%A3%E7%89%88/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202309060000FL_Studio_Producer_Edition_21.1.0_Build_3713_%E7%A0%B4%E8%A7%A3%E7%89%88.png"></p>
<p>阿里云盘：  <a href="https://www.aliyundrive.com/s/NfWuoNSiw2q">https://www.aliyundrive.com/s/NfWuoNSiw2q</a></p>
]]></content>
      <categories>
        <category>音乐</category>
        <category>软件</category>
        <category>FL Studio</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>音乐</tag>
        <tag>FL Studio</tag>
      </tags>
  </entry>
  <entry>
    <title>windows下为apache生成https证书</title>
    <url>/blog/2023/09/10/202309100000windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<p>1.cmd进入命令行，进入apache安装目录的bin目录。<br><img src="https://laisc7301.github.io/files/img/2023/202309100000windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A61.png"></p>
<span id="more"></span>

<p>2.执行命令：set OPENSSL_CONF&#x3D;..\conf\openssl.cnf</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309100001windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A62.png"></p>
<p>3.生成服务端的key文件</p>
<p>执行命令：openssl genrsa -out server.key 2048</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309100002windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A63.png"></p>
<p>4.生成签署申请</p>
<p>执行命令：openssl req -new -out server.csr -key server.key</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309100003windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A64.png"></p>
<p>5.生成CA的key文件</p>
<p>执行命令：openssl genrsa -out ca.key 2048</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309100004windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A65.png"></p>
<p>6.生成CA自签署证书</p>
<p>执行命令：openssl req -new -x509 -days 365 -key ca.key -out ca.crt</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309100005windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A66.png"></p>
<p>完成后，会在目录bin下生成ca.crt文件，此处填写的信息与步骤4中类似。</p>
<p>7.执行以下操作：</p>
<p>在bin下新建demoCA文件夹<br>bin&#x2F;demoCA</p>
<p>在demoCA下新建index.txt<br>bin&#x2F;demoCA&#x2F;index.txt</p>
<p>在demoCA下新建serial.txt，其内容为01,重命名删除.txt后缀<br>bin&#x2F;demoCA&#x2F;serial</p>
<p>在demoCA下新建newcerts文件夹<br>bin&#x2F;demoCA&#x2F;newcerts</p>
<p>8.生成CA的服务器签署证书</p>
<p>执行命令：openssl ca -in server.csr -out server.crt -cert ca.crt -keyfile ca.key </p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309100006windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A67.png"></p>
<p>9.完成后，demoCA目录下文件如下：</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309100007windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A68.png"></p>
<p>bin目录下会生成下面五个文件：（为了方便展示，已经把这五个文件移动到了另一个文件夹）</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309100008windows%E4%B8%8B%E4%B8%BAapache%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A69.png"></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Apache</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Apache</tag>
      </tags>
  </entry>
  <entry>
    <title>FL笛子插件Mini DiZi</title>
    <url>/blog/2023/09/03/202309030001FL%E7%AC%9B%E5%AD%90%E6%8F%92%E4%BB%B6MiniDiZi/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202309030001FL%E7%AC%9B%E5%AD%90%E6%8F%92%E4%BB%B6MiniDiZi.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/Ca2qBuVAFSj">https://www.aliyundrive.com/s/Ca2qBuVAFSj</a></p>
]]></content>
      <categories>
        <category>音乐</category>
        <category>软件</category>
        <category>FL Studio</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>音乐</tag>
        <tag>FL Studio</tag>
      </tags>
  </entry>
  <entry>
    <title>kali apahce2开启https</title>
    <url>/blog/2023/09/11/202309110000kali_apahce2%E5%BC%80%E5%90%AFhttps/</url>
    <content><![CDATA[<p>1.加载ssl模块</p>
<p>输入命令：a2enmod ssl</p>
<p>2.将&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;default-ssl.conf的内容复制，粘贴到&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;000-default.conf文件的最底端。</p>
<p>3.修改&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;000-default.conf文件，找到</p>
<p>SSLCertificateFile      &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ssl-cert-snakeoil.pem<br>SSLCertificateKeyFile   &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;ssl-cert-snakeoil.key</p>
<p>这两行</p>
<p>改为自己的证书文件地址</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309110000kali_apahce2%E5%BC%80%E5%90%AFhttps1.png"></p>
<p>4.输入以下两个命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl reload apache2</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service apache2 restart</span><br></pre></td></tr></table></figure>

<p>5.完成，通过https访问一下你的新网站试试。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Apache</category>
        <category>Kali</category>
        <category>Apache</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Apache</tag>
        <tag>Kali</tag>
      </tags>
  </entry>
  <entry>
    <title>在VMware上的Ubuntu共享文件夹</title>
    <url>/blog/2023/09/13/202309130000%E5%9C%A8VMware%E4%B8%8A%E7%9A%84Ubuntu%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    <content><![CDATA[<h2 id="1-先查看设置的文件夹有没有起效"><a href="#1-先查看设置的文件夹有没有起效" class="headerlink" title="1.先查看设置的文件夹有没有起效"></a>1.先查看设置的文件夹有没有起效</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmware-hgfsclient</span><br></pre></td></tr></table></figure>

<p>如果出现有挂载对应的文件夹就起效</p>
<h2 id="2-创建目录并挂载"><a href="#2-创建目录并挂载" class="headerlink" title="2.创建目录并挂载"></a>2.创建目录并挂载</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /mnt/hgfs</span><br></pre></td></tr></table></figure>

<h2 id="3-自动挂载"><a href="#3-自动挂载" class="headerlink" title="3.自动挂载"></a>3.自动挂载</h2><p>自动挂载方法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> /etc/fstab /etc/fstab.bak</span><br><span class="line"><span class="built_in">sudo</span> vim /etc/fstab</span><br></pre></td></tr></table></figure>

<p>在最后一行插入这样一句</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.host:/shared  /mnt/hgfs/vmshared   fuse.vmhgfs-fuse     allow_other,defaults         0       0</span><br></pre></td></tr></table></figure>

<p>shared是自己设置的文件夹名称，&#x2F;mnt&#x2F;hgfs&#x2F;vmshared是挂载点，fuse.vmhgfs-fuse挂载方法</p>
<p><img src="https://laisc7301.github.io/files/img/2023/202309130000%E5%9C%A8VMware%E4%B8%8A%E7%9A%84Ubuntu%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9.png"></p>
<h2 id="4-最后保存退出"><a href="#4-最后保存退出" class="headerlink" title="4.最后保存退出"></a>4.最后保存退出</h2>]]></content>
      <categories>
        <category>编程</category>
        <category>软件</category>
        <category>VMware</category>
        <category>Ubuntu</category>
        <category>VMware</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>软件</tag>
        <tag>VMware</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 23.04安装VMware tools遇到问题解决</title>
    <url>/blog/2023/09/13/202309130001Ubuntu_23.04%E5%AE%89%E8%A3%85VMware_tools%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<p>ubuntu-23.04安装VMware_tools遇到问题解决</p>
<h2 id="1-首先用官网的教程："><a href="#1-首先用官网的教程：" class="headerlink" title="1.首先用官网的教程："></a>1.首先用官网的教程：</h2><p>运行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="string">&#x27;/home/laisc/文档/VMwareTools-10.3.25-20206839/vmware-tools-distrib/vmware-install.pl&#x27;</span></span><br></pre></td></tr></table></figure>

<p>一步一步安装，结果出错：Segmentation fault (core dumped)</p>
<h2 id="2-解决问题，先卸载掉所有相关软件："><a href="#2-解决问题，先卸载掉所有相关软件：" class="headerlink" title="2.解决问题，先卸载掉所有相关软件："></a>2.解决问题，先卸载掉所有相关软件：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vmware-uninstall-tools.pl</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get purge open-vm-tools open-vm-tools-desktop</span><br></pre></td></tr></table></figure>

<h2 id="3-安装open-vm-tools"><a href="#3-安装open-vm-tools" class="headerlink" title="3.安装open-vm-tools"></a>3.安装open-vm-tools</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install open-vm-tools open-vm-tools-desktop</span><br></pre></td></tr></table></figure>

<h2 id="4-搞定"><a href="#4-搞定" class="headerlink" title="4.搞定"></a>4.搞定</h2>]]></content>
      <categories>
        <category>编程</category>
        <category>软件</category>
        <category>VMware</category>
        <category>Ubuntu</category>
        <category>VMware</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>软件</tag>
        <tag>VMware</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>AE插件：AE镜头光晕耀斑插件Videocopilot Optical Flares v1.3.5 Win中文破解版 下载</title>
    <url>/blog/2023/11/13/202311130000AE%E6%8F%92%E4%BB%B6%EF%BC%9AAE%E9%95%9C%E5%A4%B4%E5%85%89%E6%99%95%E8%80%80%E6%96%91%E6%8F%92%E4%BB%B6Videocopilot_Optical_Flares_v1.3.5_Win%E4%B8%AD%E6%96%87%E7%A0%B4%E8%A7%A3%E7%89%88/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202311130000AE%E6%8F%92%E4%BB%B6%EF%BC%9AAE%E9%95%9C%E5%A4%B4%E5%85%89%E6%99%95%E8%80%80%E6%96%91%E6%8F%92%E4%BB%B6Videocopilot_Optical_Flares_v1.3.5_%E4%B8%AD%E6%96%87%E7%A0%B4%E8%A7%A3%E7%89%88.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/Z5nHBStciyx">https://www.aliyundrive.com/s/Z5nHBStciyx</a></p>
]]></content>
      <categories>
        <category>软件</category>
        <category>Adobe</category>
        <category>AE</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>Adobe</tag>
        <tag>AE</tag>
      </tags>
  </entry>
  <entry>
    <title>AE插件：Universe 2024.0 Win 下载</title>
    <url>/blog/2023/11/14/202311140001AE%E6%8F%92%E4%BB%B6%EF%BC%9AUniverse_2024.0_Win/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202311140001AE%E6%8F%92%E4%BB%B6%EF%BC%9AUniverse_2024.0.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/He5B7hoh2cX">https://www.aliyundrive.com/s/He5B7hoh2cX</a></p>
]]></content>
      <categories>
        <category>软件</category>
        <category>Adobe</category>
        <category>AE</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>Adobe</tag>
        <tag>AE</tag>
      </tags>
  </entry>
  <entry>
    <title>AE插件：Trapcode Suite 2024.0.0 Win 下载</title>
    <url>/blog/2023/11/14/202311140000AE%E6%8F%92%E4%BB%B6%EF%BC%9ATrapcode_Suite_2024.0.0_Win/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202311140000AE%E6%8F%92%E4%BB%B6%EF%BC%9ATrapcode_Suite_2024.0.0.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/z7y3aGorvKN">https://www.aliyundrive.com/s/z7y3aGorvKN</a></p>
]]></content>
      <categories>
        <category>软件</category>
        <category>Adobe</category>
        <category>AE</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>Adobe</tag>
        <tag>AE</tag>
      </tags>
  </entry>
  <entry>
    <title>AE插件：Motion-v4.0.2.4179 下载</title>
    <url>/blog/2023/11/14/202311140002AE%E6%8F%92%E4%BB%B6%EF%BC%9AMotion-v4.0.2.4179/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202311140002AE%E6%8F%92%E4%BB%B6%EF%BC%9AMotion-v4.0.2.4179.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/bBoDpGohz1D">https://www.aliyundrive.com/s/bBoDpGohz1D</a></p>
]]></content>
      <categories>
        <category>软件</category>
        <category>Adobe</category>
        <category>AE</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>Adobe</tag>
        <tag>AE</tag>
      </tags>
  </entry>
  <entry>
    <title>Nuke15.0v1 破解激活服务器 下载</title>
    <url>/blog/2023/11/16/202311160000Nuke15.0v1_%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202311160000Nuke15.0v1_%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%99%A8.png"></p>
<p>阿里云盘：<a href="https://www.aliyundrive.com/s/CYDJw7msQsx">https://www.aliyundrive.com/s/CYDJw7msQsx</a></p>
]]></content>
      <categories>
        <category>软件</category>
        <category>破解</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>破解</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu创建目录快捷方式</title>
    <url>/blog/2023/12/20/202312200000Ubuntu%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>ln -s [绝对路径] ~&#x2F;桌面&#x2F;[快捷方式文件名]</p>
<p>如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s /mnt/hgfs/vmshared ~/桌面/shared</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>软件</category>
        <category>系统</category>
        <category>Linux</category>
        <category>Ubuntu</category>
        <category>Ubuntu</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>软件</tag>
        <tag>系统</tag>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Nodejs http模块返回内容中文乱码问题</title>
    <url>/blog/2023/11/28/202311280000%E8%A7%A3%E5%86%B3Nodejs_http%E6%A8%A1%E5%9D%97%E8%BF%94%E5%9B%9E%E5%86%85%E5%AE%B9%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>只需要一行代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain; charset=utf-8&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure>



<p>完整的代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> util = <span class="built_in">require</span>(<span class="string">&#x27;util&#x27;</span>);</span><br><span class="line"></span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">function</span>(<span class="params">req, res</span>)&#123;</span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain; charset=utf-8&#x27;</span>&#125;);</span><br><span class="line">    <span class="comment">// 解析 url 参数</span></span><br><span class="line">    <span class="keyword">var</span> params = url.<span class="title function_">parse</span>(req.<span class="property">url</span>, <span class="literal">true</span>).<span class="property">query</span>;</span><br><span class="line">    res.<span class="title function_">write</span>(<span class="string">&quot;网站名：&quot;</span> + params.<span class="property">name</span>);</span><br><span class="line">    res.<span class="title function_">write</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    res.<span class="title function_">write</span>(<span class="string">&quot;网站 URL：&quot;</span> + params.<span class="property">url</span>);</span><br><span class="line">    res.<span class="title function_">end</span>();</span><br><span class="line"></span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8888</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://laisc7301.github.io/files/img/2023/202311280000%E8%A7%A3%E5%86%B3Nodejs_http%E6%A8%A1%E5%9D%97%E8%BF%94%E5%9B%9E%E5%86%85%E5%AE%B9%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98.png"></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Node.js</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux中shell的特殊变量</title>
    <url>/blog/2023/12/23/202312230000Linux%E4%B8%ADshell%E7%9A%84%E7%89%B9%E6%AE%8A%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p>shell中的特殊变量：<br>变量名:含义<br><code>$0</code>:shell或shell脚本的名字</p>
<p><code>$*</code>:以一对双引号给出参数列表</p>
<p><code>$@</code>:将各个参数分别加双引号返回</p>
<p><code>$#</code>:参数的个数</p>
<p><code>$_</code>:代表上一个命令的最后一个参数</p>
<p><code>$$</code>:代表所在命令的PID</p>
<p><code>$!</code>:代表最后执行的后台命令的PID</p>
<p><code>$?</code>:代表上一个命令执行后的退出状态</p>
<p><code>echo $? </code>:如果返回值是0，就是执行成功；如果是返回值是0以外的值，就是失败。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>使用GDB调试汇编程序(简单)</title>
    <url>/blog/2023/12/28/202312280000%E4%BD%BF%E7%94%A8GDB%E8%B0%83%E8%AF%95%E6%B1%87%E7%BC%96%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="直接调试目标程序的第一条命令，假如程序文件名是test01："><a href="#直接调试目标程序的第一条命令，假如程序文件名是test01：" class="headerlink" title="直接调试目标程序的第一条命令，假如程序文件名是test01："></a>直接调试目标程序的第一条命令，假如程序文件名是test01：</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gdb ./test01</span><br></pre></td></tr></table></figure>

<p>这样就进入了gdb程序。</p>
<h2 id="第二步，先run一下："><a href="#第二步，先run一下：" class="headerlink" title="第二步，先run一下："></a>第二步，先run一下：</h2><p>命令很简单，就是run：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">run</span><br></pre></td></tr></table></figure>

<p>或者也可以简写成r：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">r</span><br></pre></td></tr></table></figure>

<p>如果不运行run直接打断点调试的话，会遇到下面的错误：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Warning:</span><br><span class="line">Cannot insert breakpoint 1.</span><br><span class="line">Cannot access memory at address 0x1190</span><br></pre></td></tr></table></figure>

<p>原因在于数据断点的设置有误。在没有用gdb运行（run）过可执行程序之前，使用disasemble指令反汇编出来的汇编语言的左边的地址偏移地址，不是逻辑地址。所以，即使break指令能够设置断点，当GDB运行时也不可能访问到这个地址。也就会出现上面的错误。<br>数据断点：给某个内存地址设置断点，改变该地址所装内容时会触发断点，运行到该地址时会触发断点。（从网上看的，参考）<br>而学过操作系统或者微机原理就该知道，程序给出来的只是逻辑地址，不可能直接给物理地址的，物理地址都是由系统将其映射成了逻辑地址。</p>
<h2 id="将格式改为intel格式："><a href="#将格式改为intel格式：" class="headerlink" title="将格式改为intel格式："></a>将格式改为intel格式：</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> disassembly-flavor intel</span><br></pre></td></tr></table></figure>



<h2 id="反汇编main函数："><a href="#反汇编main函数：" class="headerlink" title="反汇编main函数："></a>反汇编main函数：</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">disas main</span><br></pre></td></tr></table></figure>



<h1 id="开始打断点调试："><a href="#开始打断点调试：" class="headerlink" title="开始打断点调试："></a>开始打断点调试：</h1><p>比如输入<code>disas main</code>命令后看到了以下的内容：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">(gdb) disas main</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> main:</span><br><span class="line">   0x56556190 &lt;+0&gt;:	mov    eax,ds:0x4008</span><br><span class="line">   0x56556195 &lt;+5&gt;:	mov    ebx,0x9b</span><br><span class="line">   0x5655619a &lt;+10&gt;:	sub    ebx,0xa</span><br><span class="line">   0x5655619d &lt;+13&gt;:	add    eax,ebx</span><br><span class="line">   0x5655619f &lt;+15&gt;:	ret</span><br><span class="line">End of assembler dump.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果我要把断点打在&lt;+5&gt;的位置上，就输入以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">break</span> *0x56556195</span><br></pre></td></tr></table></figure>

<p>程序将在运行完&lt;+0&gt;，还未运行&lt;+5&gt;的时候停下来。</p>
<p>该命令还可以简写成这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b *0x56556195</span><br></pre></td></tr></table></figure>



<p>然后输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">run</span><br></pre></td></tr></table></figure>

<p>开始调试</p>
<h2 id="查看寄存器的值"><a href="#查看寄存器的值" class="headerlink" title="查看寄存器的值"></a>查看寄存器的值</h2><p>比如查看eax的值：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">info register eax</span><br></pre></td></tr></table></figure>



<h2 id="单步步进："><a href="#单步步进：" class="headerlink" title="单步步进："></a>单步步进：</h2><p>运行下面命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">stepi</span><br></pre></td></tr></table></figure>

<p>此时输入<code>disas</code>可以看到运行的位置：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">(gdb) disas</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> main:</span><br><span class="line">   0x56556190 &lt;+0&gt;:	mov    eax,ds:0x56559008</span><br><span class="line">=&gt; 0x56556195 &lt;+5&gt;:	mov    ebx,0x9b</span><br><span class="line">   0x5655619a &lt;+10&gt;:	sub    ebx,0xa</span><br><span class="line">   0x5655619d &lt;+13&gt;:	add    eax,ebx</span><br><span class="line">   0x5655619f &lt;+15&gt;:	ret</span><br><span class="line">End of assembler dump.</span><br></pre></td></tr></table></figure>



<h2 id="继续运行："><a href="#继续运行：" class="headerlink" title="继续运行："></a>继续运行：</h2><p>运行下面命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">continue</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>Linux</category>
        <category>汇编</category>
        <category>GDB</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Linux</tag>
        <tag>汇编</tag>
        <tag>GDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo草稿的使用</title>
    <url>/blog/2023/12/29/202312290000Hexo%E8%8D%89%E7%A8%BF%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="预备知识："><a href="#预备知识：" class="headerlink" title="预备知识："></a>预备知识：</h1><p>你可以执行下列命令来创建一篇新文章或者新的页面。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>比如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new page MyPage</span><br></pre></td></tr></table></figure>

<p>这样可以创建一个路径为MyPage的页面。</p>
<p>再比如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new doc MyPost</span><br></pre></td></tr></table></figure>

<p>这样可以使用doc作为模板创建一个路径为MyPost的文章。</p>
<h1 id="建立文章草稿"><a href="#建立文章草稿" class="headerlink" title="建立文章草稿"></a>建立文章草稿</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new draft &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>当然也可以写作：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo n draft &lt;title&gt;</span><br></pre></td></tr></table></figure>



<h1 id="将草稿发布为正式文章"><a href="#将草稿发布为正式文章" class="headerlink" title="将草稿发布为正式文章"></a>将草稿发布为正式文章</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo P &lt;filename&gt;</span><br></pre></td></tr></table></figure>



<h1 id="本机预览草稿"><a href="#本机预览草稿" class="headerlink" title="本机预览草稿"></a>本机预览草稿</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo S --draft</span><br></pre></td></tr></table></figure>



<h1 id="本机预览"><a href="#本机预览" class="headerlink" title="本机预览"></a>本机预览</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo S</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>将C/C++程序编译成汇编文件</title>
    <url>/blog/2023/12/31/202312310000%E5%B0%86C_C++%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%AF%91%E6%88%90%E6%B1%87%E7%BC%96%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>如果要将C语言转换为汇编语言，就这样写：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gcc -S &lt;filename&gt;</span><br></pre></td></tr></table></figure>



<p>如果要将C++语言转换为汇编语言，就这样写：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">g++ -S &lt;filename&gt;</span><br></pre></td></tr></table></figure>



<p>比如：这里有个example.c的文件，就这样写：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gcc -S ./example.c</span><br></pre></td></tr></table></figure>



<p>要注意命令行里的 <code>S</code> 要大写。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>汇编</category>
        <category>C</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>汇编</tag>
        <tag>C</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot快速入门</title>
    <url>/blog/2024/01/03/202401030000SpringBoot%E5%85%A5%E9%97%A81/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>首先按照图示新建项目：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401030000SpringBoot%E5%85%A5%E9%97%A81_1.png"></p>
<span id="more"></span>

<p>添加以下依赖：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401030000SpringBoot%E5%85%A5%E9%97%A81_2.png"></p>
<p>找到application.properties文件，并写入下面内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server.port=8001</span></span><br></pre></td></tr></table></figure>

<p>这样服务的端口就由默认的8080变成了8001</p>
<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401030000SpringBoot%E5%85%A5%E9%97%A81_3.png"></p>
<p>首先，static下的文件是网站的静态文件，里面的文件会直接显示出来，就像静态网站一样。</p>
<p>里面的index.html内容如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Hello, world!</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时如果直接访问<a href="http://localhost:8001/">http://localhost:8001/</a> ，就会看到Hello, world!页面。</p>
<p>先把TestController的代码放出来：</p>
<p>TestController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example1.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laisc.example1.entity.MyData1;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello, SpringBoot!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test1</span><span class="params">(<span class="meta">@RequestParam(&quot;vara&quot;)</span> String vara)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;vara = &quot;</span> + vara;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test1_1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test1_1</span><span class="params">(<span class="meta">@RequestParam(&quot;vara&quot;)</span> String vara)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;vara = &quot;</span> + vara;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/test1_2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test1_2</span><span class="params">(<span class="meta">@RequestParam(&quot;vara&quot;)</span> String vara)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;vara = &quot;</span> + vara;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">(<span class="meta">@RequestBody</span> MyData1 myData1)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;myData1 = &quot;</span> + myData1.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test3/&#123;text1&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test3</span><span class="params">(<span class="meta">@PathVariable(&quot;text1&quot;)</span> String text11)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;text1 = &quot;</span> + text11;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test4&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test4</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">requestUrl</span> <span class="operator">=</span> request.getRequestURL().toString();<span class="comment">//得到请求的URL地址</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> request.getServletPath();  <span class="comment">// 请求地址</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">requestUri</span> <span class="operator">=</span> request.getRequestURI();<span class="comment">//得到请求的资源</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">queryString</span> <span class="operator">=</span> request.getQueryString();<span class="comment">//得到请求的URL地址中附带的参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> request.getMethod();<span class="comment">//得到请求URL地址时使用的方法</span></span><br><span class="line"></span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);<span class="comment">//设置将字符以&quot;UTF-8&quot;编码输出到客户端浏览器</span></span><br><span class="line">        <span class="comment">//通过设置响应头控制浏览器以UTF-8的编码显示数据，如果不加这句话，那么浏览器显示的将是乱码</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;content-type&quot;</span>, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        out.write(<span class="string">&quot;获取到的客户机信息如下：&quot;</span>);</span><br><span class="line">        out.write(<span class="string">&quot;&lt;hr/&gt;&quot;</span>);</span><br><span class="line">        out.write(<span class="string">&quot;请求的URL地址：&quot;</span> + requestUrl);</span><br><span class="line">        out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">        out.write(<span class="string">&quot;请求的地址：&quot;</span> + action);</span><br><span class="line">        out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">        out.write(<span class="string">&quot;请求的资源：&quot;</span> + requestUri);</span><br><span class="line">        out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">        out.write(<span class="string">&quot;请求的URL地址中附带的参数：&quot;</span> + queryString);</span><br><span class="line">        out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">        out.write(<span class="string">&quot;请求的name参数：&quot;</span> + name);</span><br><span class="line">        out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">        out.write(<span class="string">&quot;请求使用的方法：&quot;</span> + method);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test5&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test5</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/test/test4?name=me&quot;</span>).forward(request, response);<span class="comment">//重定向到 /test/test4?name=me</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>要注意TestController.java开头有这样一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br></pre></td></tr></table></figure>

<p><code>@RequestMapping(&quot;/test&quot;)</code>的意思是此类下所有页面链接都是在&#x2F;test底下的。</p>
<p>看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello, SpringBoot!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时如果访问<a href="http://localhost:8001/test/hello">http://localhost:8001/test/hello</a> ，会看到：</p>
<blockquote>
<p>Hello, SpringBoot!</p>
</blockquote>
<p>看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test1</span><span class="params">(<span class="meta">@RequestParam(&quot;vara&quot;)</span> String vara)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;vara = &quot;</span> + vara;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时如果用POST或者GET把vara&#x3D;123提交到<a href="http://localhost:8001/test/test1">http://localhost:8001/test/test1</a> ，会看到 ：</p>
<blockquote>
<p>vara &#x3D; 123</p>
</blockquote>
<p>看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/test1_1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test1_1</span><span class="params">(<span class="meta">@RequestParam(&quot;vara&quot;)</span> String vara)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;vara = &quot;</span> + vara;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时如果访问<a href="http://localhost:8001/test/test1?vara=123">http://localhost:8001/test/test1?vara=123</a> ，会看到</p>
<blockquote>
<p>vara &#x3D; 123</p>
</blockquote>
<p>看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/test1_2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test1_2</span><span class="params">(<span class="meta">@RequestParam(&quot;vara&quot;)</span> String vara)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;vara = &quot;</span> + vara;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时如果用POST把vara&#x3D;123提交到<a href="http://localhost:8001/test/test1">http://localhost:8001/test/test1</a> ，会看到 </p>
<blockquote>
<p>vara &#x3D; 123</p>
</blockquote>
<p>看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">(<span class="meta">@RequestBody</span> MyData1 myData1)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;myData1 = &quot;</span> + myData1.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这一段略微复杂一点，浏览器需要提交json数据。</p>
<p>先来看看MyData1的代码：</p>
<p>MyData1.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example1.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyData1</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> String username=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String password=<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyData1</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyData1</span><span class="params">(<span class="type">int</span> id, String username, String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;MyData1&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>看到MyData1里面有3个变量：id、username、password，这就是要提交的json数据。</p>
<p>比如提交下面数据到<a href="http://localhost:8001/test/test2">http://localhost:8001/test/test2</a> ：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;abc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;def&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>你会得到下面结果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">myData1 = MyData1&#123;id=<span class="number">123</span>, username=<span class="string">&#x27;abc&#x27;</span>, password=<span class="string">&#x27;def&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>



<p>看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test3/&#123;text1&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test3</span><span class="params">(<span class="meta">@PathVariable(&quot;text1&quot;)</span> String text11)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;text1 = &quot;</span> + text11;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这时如果访问<a href="http://localhost:8001/test/test3/12345">http://localhost:8001/test/test3/12345</a> ，就会看到：</p>
<blockquote>
<p>text1 &#x3D; 12345</p>
</blockquote>
<p>下面一段不难，就是字有点多。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/test4&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test4</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">requestUrl</span> <span class="operator">=</span> request.getRequestURL().toString();<span class="comment">//得到请求的URL地址</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> request.getServletPath();  <span class="comment">// 请求地址</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">requestUri</span> <span class="operator">=</span> request.getRequestURI();<span class="comment">//得到请求的资源</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">queryString</span> <span class="operator">=</span> request.getQueryString();<span class="comment">//得到请求的URL地址中附带的参数</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> request.getMethod();<span class="comment">//得到请求URL地址时使用的方法</span></span><br><span class="line"></span><br><span class="line">    response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);<span class="comment">//设置将字符以&quot;UTF-8&quot;编码输出到客户端浏览器</span></span><br><span class="line">    <span class="comment">//通过设置响应头控制浏览器以UTF-8的编码显示数据，如果不加这句话，那么浏览器显示的将是乱码</span></span><br><span class="line">    response.setHeader(<span class="string">&quot;content-type&quot;</span>, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">    out.write(<span class="string">&quot;获取到的客户机信息如下：&quot;</span>);</span><br><span class="line">    out.write(<span class="string">&quot;&lt;hr/&gt;&quot;</span>);</span><br><span class="line">    out.write(<span class="string">&quot;请求的URL地址：&quot;</span> + requestUrl);</span><br><span class="line">    out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">    out.write(<span class="string">&quot;请求的地址：&quot;</span> + action);</span><br><span class="line">    out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">    out.write(<span class="string">&quot;请求的资源：&quot;</span> + requestUri);</span><br><span class="line">    out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">    out.write(<span class="string">&quot;请求的URL地址中附带的参数：&quot;</span> + queryString);</span><br><span class="line">    out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">    out.write(<span class="string">&quot;请求的name参数：&quot;</span> + name);</span><br><span class="line">    out.write(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">    out.write(<span class="string">&quot;请求使用的方法：&quot;</span> + method);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>访问<a href="http://localhost:8001/test/test4?name=aaa">http://localhost:8001/test/test4?name=aaa</a> ，看结果。</p>
<p>最后看下面一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/test5&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test5</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    request.getRequestDispatcher(<span class="string">&quot;/test/test4?name=me&quot;</span>).forward(request, response);<span class="comment">//重定向到 /test/test4?name=me</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>访问<a href="http://localhost:8001/test/test5">http://localhost:8001/test/test5</a> ，访问的结果跟访问<a href="http://localhost:8001/test/test4?name=me">http://localhost:8001/test/test4?name=me</a> 一样。</p>
<p>项目源代码下载：<a href="https://pan.baidu.com/s/1XBbPVe14KjCAcvsSFGkGRQ?pwd=g09i">https://pan.baidu.com/s/1XBbPVe14KjCAcvsSFGkGRQ?pwd=g09i</a></p>
<p>下一篇：SpringBoot使用Thymeleaf：<a href="https://laisc7301.github.io/blog/2024/01/04/202401040000SpringBoot%E4%BD%BF%E7%94%A8Thymeleaf/">https://laisc7301.github.io/blog/2024/01/04/202401040000SpringBoot%E4%BD%BF%E7%94%A8Thymeleaf/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot使用Thymeleaf</title>
    <url>/blog/2024/01/04/202401040000SpringBoot%E4%BD%BF%E7%94%A8Thymeleaf/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>首先按照图示新建项目：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401040000SpringBoot%E4%BD%BF%E7%94%A8Thymeleaf_1.png"></p>
<span id="more"></span>

<p>添加以下依赖：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401040000SpringBoot%E4%BD%BF%E7%94%A8Thymeleaf_2.png"></p>
<p>找到application.properties文件，并写入下面内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server.port=8001</span></span><br><span class="line"><span class="string">spring.thymeleaf.prefix=classpath:/templates/</span></span><br></pre></td></tr></table></figure>

<p>如果不加spring.thymeleaf.prefix这一行，等一下会报404错误。</p>
<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401040000SpringBoot%E4%BD%BF%E7%94%A8Thymeleaf_3.png"></p>
<p>先把TestController的代码放出来：</p>
<p>TestController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example2.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laisc.example2.entity.MyData1;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;laisc&quot;</span>;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test2&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test3&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test3</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        List&lt;MyData1&gt; myList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        myList.add(<span class="keyword">new</span> <span class="title class_">MyData1</span>(<span class="number">1</span>,<span class="string">&quot;laisc&quot;</span>,<span class="string">&quot;1234&quot;</span>));</span><br><span class="line">        myList.add(<span class="keyword">new</span> <span class="title class_">MyData1</span>(<span class="number">2</span>,<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;qwer&quot;</span>));</span><br><span class="line">        myList.add(<span class="keyword">new</span> <span class="title class_">MyData1</span>(<span class="number">3</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;list123&quot;</span>, myList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test3&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test4&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test4</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        <span class="type">MyData1</span> <span class="variable">mydata1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyData1</span>(<span class="number">1</span>,<span class="string">&quot;laisc&quot;</span>,<span class="string">&quot;1234&quot;</span>);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;data123&quot;</span>, mydata1);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test4&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test5&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test5</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;laisc&quot;</span>;</span><br><span class="line">        request.setAttribute(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test2&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/test1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;test1&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再看test1.html中的内容：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Hello, world!</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里由于<code>return &quot;test1&quot;;</code>，所以显示了test1.html的内容。</p>
<p>访问 <a href="http://localhost:8001/test/test1">http://localhost:8001/test/test1</a> ，你将看到：</p>
<blockquote>
<p>Hello, world!</p>
</blockquote>
<p>再看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/test2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;laisc&quot;</span>;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;test2&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看test2.html中的内容：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;Hello, &#x27; + $&#123;name&#125; + &#x27;!&#x27;&quot;</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时如果访问<a href="http://localhost:8001/test/test2">http://localhost:8001/test/test2</a> ，会看到 Hello, laisc! 文字。</p>
<p>注意，不要漏了<code>&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</code>这一行。</p>
<p>看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/test3&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test3</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">    List&lt;MyData1&gt; myList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    myList.add(<span class="keyword">new</span> <span class="title class_">MyData1</span>(<span class="number">1</span>,<span class="string">&quot;laisc&quot;</span>,<span class="string">&quot;1234&quot;</span>));</span><br><span class="line">    myList.add(<span class="keyword">new</span> <span class="title class_">MyData1</span>(<span class="number">2</span>,<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;qwer&quot;</span>));</span><br><span class="line">    myList.add(<span class="keyword">new</span> <span class="title class_">MyData1</span>(<span class="number">3</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>));</span><br><span class="line">    model.addAttribute(<span class="string">&quot;list123&quot;</span>, myList);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;test3&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再看看MyData1的代码：</p>
<p>MyData1.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example2.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyData1</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> String username=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String password=<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyData1</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyData1</span><span class="params">(<span class="type">int</span> id, String username, String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;MyData1&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>看看test3.html：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>username<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>password<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;data123 : $&#123;list123&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;data123.id&#125;&quot;</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;data123.username&#125;&quot;</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;data123.password&#125;&quot;</span>&gt;</span>555<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时访问<a href="http://localhost:8001/test/test3">http://localhost:8001/test/test3</a> ，会看到下面文字。</p>
<table>
<thead>
<tr>
<th>ID</th>
<th>username</th>
<th align="left">password</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>laisc</td>
<td align="left">1234</td>
</tr>
<tr>
<td>2</td>
<td>admin</td>
<td align="left">qwer</td>
</tr>
<tr>
<td>3</td>
<td>root</td>
<td align="left">root</td>
</tr>
</tbody></table>
<p>再看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/test4&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test4</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">    <span class="type">MyData1</span> <span class="variable">mydata1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyData1</span>(<span class="number">1</span>,<span class="string">&quot;laisc&quot;</span>,<span class="string">&quot;1234&quot;</span>);</span><br><span class="line">    model.addAttribute(<span class="string">&quot;data123&quot;</span>, mydata1);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;test4&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看看test4.html：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;details.html&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;http://localhost:8080/gtvg/order/details(orderId=$&#123;data123.username&#125;)&#125;&quot;</span>&gt;</span>链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;details.html&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/order/details(orderId=$&#123;data123.username&#125;)&#125;&quot;</span>&gt;</span>链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;abc.html&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;order/&#x27;+$&#123;data123.id&#125;+&#x27;/details?orderId=&#x27;+$&#123;data123.username&#125; &quot;</span>&gt;</span>链接3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;abc.html&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/details/&#x27;+$&#123;data123.id&#125;(orderId=$&#123;data123.username&#125;)&#125;&quot;</span>&gt;</span>链接4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;abc.html&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/details/&#x27;+$&#123;data123.id&#125;+&#x27;/aaa&#x27;(orderId=$&#123;data123.username&#125;)&#125;&quot;</span>&gt;</span>链接5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时访问<a href="http://localhost:8001/test/test4">http://localhost:8001/test/test4</a> ，会看到下面几个链接。</p>
<blockquote>
<p><a href="http://localhost:8080/gtvg/order/details?orderId=laisc">链接1</a> <a href="http://localhost:8001/order/details?orderId=laisc">链接2</a> <a href="http://localhost:8001/test/order/1/details?orderId=laisc">链接3</a> <a href="http://localhost:8001/details/1?orderId=laisc">链接4</a> <a href="http://localhost:8001/details/1/aaa?orderId=laisc">链接5</a></p>
</blockquote>
<p>最后看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/test5&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test5</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;laisc&quot;</span>;</span><br><span class="line">    request.setAttribute(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;test2&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时如果访问<a href="http://localhost:8001/test/test5">http://localhost:8001/test/test5</a> ，会看到 Hello, laisc! 文字。</p>
<p>项目源代码下载：<a href="https://pan.baidu.com/s/1FK5xway6aWlTa-5hN_YlkQ?pwd=4br9">https://pan.baidu.com/s/1FK5xway6aWlTa-5hN_YlkQ?pwd=4br9</a></p>
<p>上一篇：SpringBoot入门：<a href="https://laisc7301.github.io/blog/2024/01/03/202401030000SpringBoot%E5%85%A5%E9%97%A81/">https://laisc7301.github.io/blog/2024/01/03/202401030000SpringBoot%E5%85%A5%E9%97%A81/</a></p>
<p>下一篇：SpringBoot使用MyBatis连接MySQL： <a href="https://laisc7301.github.io/blog/2024/01/07/202401070000SpringBoot%E4%BD%BF%E7%94%A8MyBatis%E8%BF%9E%E6%8E%A5MySQL/">https://laisc7301.github.io/blog/2024/01/07/202401070000SpringBoot%E4%BD%BF%E7%94%A8MyBatis%E8%BF%9E%E6%8E%A5MySQL/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot使用MyBatis连接MySQL</title>
    <url>/blog/2024/01/07/202401070000SpringBoot%E4%BD%BF%E7%94%A8MyBatis%E8%BF%9E%E6%8E%A5MySQL/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>首先按照图示新建项目：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401070000SpringBoot%E4%BD%BF%E7%94%A8MyBatis%E8%BF%9E%E6%8E%A5MySQL_1.png"></p>
<span id="more"></span>

<p>添加以下依赖：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401070000SpringBoot%E4%BD%BF%E7%94%A8MyBatis%E8%BF%9E%E6%8E%A5MySQL_2.png"></p>
<p>找到application.properties文件，并写入下面内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server.port=8001</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置数据库名为testdata</span></span><br><span class="line"><span class="string">spring.datasource.url=jdbc:mysql://127.0.0.1:3306/testdata?characterEncoding=utf-8&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line"><span class="string">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment">#下面两行设置数据库用户名和密码</span></span><br><span class="line"><span class="string">spring.datasource.username=root</span></span><br><span class="line"><span class="string">spring.datasource.password=root1234</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">mybatis.mapper-locations=classpath:mapper/*.xml</span></span><br><span class="line"><span class="string">mybatis.configuration.map-underscore-to-camel-case=true</span></span><br></pre></td></tr></table></figure>

<p>注意 testdata 就是数据库名。</p>
<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401070000SpringBoot%E4%BD%BF%E7%94%A8MyBatis%E8%BF%9E%E6%8E%A5MySQL_3.png"></p>
<p>先把代码贴出来：</p>
<p>UserController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example3.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laisc.example3.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.laisc.example3.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.laisc.example3.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/insert&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">insert</span><span class="params">()</span> &#123; <span class="comment">// 插入数据</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        u.setPassword(<span class="string">&quot;admin123&quot;</span>);</span><br><span class="line">        u.setRole(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> userService.insertUser(u);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;成功添加&quot;</span> + num + <span class="string">&quot;条记录&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findone&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findone</span><span class="params">()</span> &#123; <span class="comment">//仅搜索一条结果，结果多于一条时，会报错</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">ret</span> <span class="operator">=</span> userService.findOneUser(u);</span><br><span class="line">        <span class="keyword">return</span> ret.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findmany&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findMany</span><span class="params">()</span> &#123; <span class="comment">//搜索所有符合条件的结果</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        List&lt;User&gt; ret = userService.findManyUser(u);</span><br><span class="line">        <span class="keyword">return</span> ret.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findmany2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findMany2</span><span class="params">()</span> &#123; <span class="comment">// 和 findMany() 方法一样，只是这次在mapper配置文件里的resultType属性上使用了User类</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        List&lt;User&gt; ret = userService.findManyUser2(u);</span><br><span class="line">        <span class="keyword">return</span> ret.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findmany3&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findMany3</span><span class="params">()</span> &#123; <span class="comment">// 和 findMany() 方法一样，只是这次ret的类型是List&lt;Map&gt;。</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        List&lt;Map&gt; ret = userService.findManyUser3(u);</span><br><span class="line">        <span class="keyword">return</span> ret.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findmany4&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findMany4</span><span class="params">()</span> &#123; <span class="comment">// 和 findMany() 方法一样，只是这次传入的参数的类型是Map，ret的类型也是List&lt;Map&gt;。</span></span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;Map&gt; ret = userService.findManyUser4(map);</span><br><span class="line">        <span class="keyword">return</span> ret.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/update1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update1</span><span class="params">()</span> &#123; <span class="comment">// 更新数据库</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        u.setPassword(<span class="string">&quot;abcd1234&quot;</span>);</span><br><span class="line">        u.setRole(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> userService.updateUserPasswordAndRole(u);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;成功更新&quot;</span> + num + <span class="string">&quot;条记录&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/update2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update2</span><span class="params">()</span> &#123; <span class="comment">// 更新数据库，但是不更新对象u中值为空的数据</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="comment">//u.setPassword(&quot;abcd1234&quot;);</span></span><br><span class="line">        u.setRole(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> userService.updateUser(u);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;成功更新&quot;</span> + num + <span class="string">&quot;条记录&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delete&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">delete</span><span class="params">()</span> &#123; <span class="comment">// 删除记录</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> userService.deleteUser(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;成功删除&quot;</span> + num + <span class="string">&quot;条记录&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>UserService.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example3.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laisc.example3.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">findOneUser</span><span class="params">(User user)</span>;<span class="comment">//仅搜索一条结果，结果多于一条时，会报错</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findManyUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findManyUser2</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findManyUser3</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findManyUser4</span><span class="params">(Map map)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUserPasswordAndRole</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(String username)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>UserServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example3.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laisc.example3.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.laisc.example3.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.laisc.example3.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserMapper userMapper;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.insertUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">findOneUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.findOneUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findManyUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.findManyUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findManyUser2</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.findManyUser2(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findManyUser3</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.findManyUser3(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findManyUser4</span><span class="params">(Map map)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.findManyUser4(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUserPasswordAndRole</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.updateUserPasswordAndRole(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.updateUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.deleteUser(username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>UserMapper.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example3.mapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laisc.example3.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">findOneUser</span><span class="params">(User user)</span>;<span class="comment">//仅搜索一条结果，结果多于一条时，会报错</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findManyUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findManyUser2</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findManyUser3</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findManyUser4</span><span class="params">(Map map)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUserPasswordAndRole</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(String username)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>User.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example3.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> String username= <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String password= <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String role= <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id, String username, String password, String role)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">        <span class="built_in">this</span>.role = role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRole</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRole</span><span class="params">(String role)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.role = role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, role=&#x27;&quot;</span> + role + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>UserMapper.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.laisc.example3.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">        insert into myuser (username, password, role)</span><br><span class="line">        VALUES (#&#123;username&#125;, #&#123;password&#125;, #&#123;role&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;myfinduser&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;role&quot;</span> <span class="attr">column</span>=<span class="string">&quot;role&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findOneUser&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;myfinduser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">        select myuser.id       id,</span><br><span class="line">               myuser.username username,</span><br><span class="line">               myuser.password password,</span><br><span class="line">               myuser.role     role</span><br><span class="line">        from myuser</span><br><span class="line">        where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findManyUser&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;myfinduser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">        select myuser.id       id,</span><br><span class="line">               myuser.username username,</span><br><span class="line">               myuser.password password,</span><br><span class="line">               myuser.role     role</span><br><span class="line">        from myuser</span><br><span class="line">        where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findManyUser2&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">        select myuser.id       id,</span><br><span class="line">               myuser.username username,</span><br><span class="line">               myuser.password password,</span><br><span class="line">               myuser.role     role</span><br><span class="line">        from myuser</span><br><span class="line">        where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findManyUser3&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Map&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">        select myuser.id       id,</span><br><span class="line">               myuser.username username,</span><br><span class="line">               myuser.password password,</span><br><span class="line">               myuser.role     role</span><br><span class="line">        from myuser</span><br><span class="line">        where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findManyUser4&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Map&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Map&quot;</span>&gt;</span></span><br><span class="line">        select myuser.id       id,</span><br><span class="line">               myuser.username username,</span><br><span class="line">               myuser.password password,</span><br><span class="line">               myuser.role     role</span><br><span class="line">        from myuser</span><br><span class="line">        where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUserPasswordAndRole&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">        update myuser</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            myuser.password=#&#123;password&#125;,</span><br><span class="line">            myuser.role=#&#123;role&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span>-- 不更新值为空的数据</span><br><span class="line">        update myuser</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;id != null and id != -1 &quot;</span>&gt;</span>id=#&#123;id&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null and password != &#x27;&#x27; &quot;</span>&gt;</span>password=#&#123;password&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;role != null and role != &#x27;&#x27; &quot;</span>&gt;</span>role=#&#123;role&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span>&gt;</span></span><br><span class="line">        delete</span><br><span class="line">        from myuser</span><br><span class="line">        where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>数据库(myuser @testdata)：</p>
<table>
<thead>
<tr>
<th>id</th>
<th>username</th>
<th>password</th>
<th>role</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>admin</td>
<td>abc123</td>
<td>root</td>
</tr>
<tr>
<td></td>
<td>admin</td>
<td>123</td>
<td>root</td>
</tr>
</tbody></table>
<p>看UserController.java：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">UserService userService;</span><br></pre></td></tr></table></figure>

<p>UserService.java 里调用了UserServiceImpl.java</p>
<p>UserServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">UserMapper userMapper;</span><br></pre></td></tr></table></figure>

<p>打上这段代码后，我们就可以使用UserMapper了。</p>
<p>另外，不要忘记在UserMapper.java里写上这一行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br></pre></td></tr></table></figure>

<p>在UserServiceImpl.java里写上这一行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br></pre></td></tr></table></figure>



<p>然后，UserMapper.xml需要这样配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.laisc.example3.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>看这一段：</p>
<p>UserController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/insert&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">insert</span><span class="params">()</span> &#123; <span class="comment">// 插入数据</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    u.setPassword(<span class="string">&quot;admin123&quot;</span>);</span><br><span class="line">    u.setRole(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> userService.insertUser(u);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;成功添加&quot;</span> + num + <span class="string">&quot;条记录&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>UserService.java、UserMapper.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure>

<p>UserServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> userMapper.insertUser(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>UserMapper.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">    insert into myuser (username, password, role)</span><br><span class="line">    VALUES (#&#123;username&#125;, #&#123;password&#125;, #&#123;role&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行代码，访问 <a href="http://localhost:8001/test/insert">http://localhost:8001/test/insert</a> ，你将看到：</p>
<blockquote>
<p>成功添加1条记录</p>
</blockquote>
<p>看这几段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/findone&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">findone</span><span class="params">()</span> &#123; <span class="comment">//仅搜索一条结果，结果多于一条时，会报错</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">ret</span> <span class="operator">=</span> userService.findOneUser(u);</span><br><span class="line">    <span class="keyword">return</span> ret.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/findmany&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">findMany</span><span class="params">()</span> &#123; <span class="comment">//搜索所有符合条件的结果</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    List&lt;User&gt; ret = userService.findManyUser(u);</span><br><span class="line">    <span class="keyword">return</span> ret.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/findmany2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">findMany2</span><span class="params">()</span> &#123; <span class="comment">// 和 findMany() 方法一样，只是这次在mapper配置文件里的resultType属性上使用了User类</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    List&lt;User&gt; ret = userService.findManyUser2(u);</span><br><span class="line">    <span class="keyword">return</span> ret.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/findmany3&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">findMany3</span><span class="params">()</span> &#123; <span class="comment">// 和 findMany() 方法一样，只是这次ret的类型是List&lt;Map&gt;。</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    List&lt;Map&gt; ret = userService.findManyUser3(u);</span><br><span class="line">    <span class="keyword">return</span> ret.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/findmany4&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">findMany4</span><span class="params">()</span> &#123; <span class="comment">// 和 findMany() 方法一样，只是这次传入的参数的类型是Map，ret的类型也是List&lt;Map&gt;。</span></span><br><span class="line">    Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;Map&gt; ret = userService.findManyUser4(map);</span><br><span class="line">    <span class="keyword">return</span> ret.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> User <span class="title function_">findOneUser</span><span class="params">(User user)</span>;<span class="comment">//仅搜索一条结果，结果多于一条时，会报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findManyUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findManyUser2</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findManyUser3</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findManyUser4</span><span class="params">(Map map)</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;myfinduser&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;role&quot;</span> <span class="attr">column</span>=<span class="string">&quot;role&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findOneUser&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;myfinduser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">    select myuser.id       id,</span><br><span class="line">           myuser.username username,</span><br><span class="line">           myuser.password password,</span><br><span class="line">           myuser.role     role</span><br><span class="line">    from myuser</span><br><span class="line">    where username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findManyUser&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;myfinduser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">    select myuser.id       id,</span><br><span class="line">           myuser.username username,</span><br><span class="line">           myuser.password password,</span><br><span class="line">           myuser.role     role</span><br><span class="line">    from myuser</span><br><span class="line">    where username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findManyUser2&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">    select myuser.id       id,</span><br><span class="line">           myuser.username username,</span><br><span class="line">           myuser.password password,</span><br><span class="line">           myuser.role     role</span><br><span class="line">    from myuser</span><br><span class="line">    where username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findManyUser3&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Map&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">    select myuser.id       id,</span><br><span class="line">           myuser.username username,</span><br><span class="line">           myuser.password password,</span><br><span class="line">           myuser.role     role</span><br><span class="line">    from myuser</span><br><span class="line">    where username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findManyUser4&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Map&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Map&quot;</span>&gt;</span></span><br><span class="line">    select myuser.id       id,</span><br><span class="line">           myuser.username username,</span><br><span class="line">           myuser.password password,</span><br><span class="line">           myuser.role     role</span><br><span class="line">    from myuser</span><br><span class="line">    where username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时访问 findmany、findmany2、findmany3、findmany4 分别会返回查询结果。访问 findone会出错，因为符合条件的结果不止一个。</p>
<p>看下面代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/update1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">update1</span><span class="params">()</span> &#123; <span class="comment">// 更新数据库</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    u.setPassword(<span class="string">&quot;abcd1234&quot;</span>);</span><br><span class="line">    u.setRole(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> userService.updateUserPasswordAndRole(u);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;成功更新&quot;</span> + num + <span class="string">&quot;条记录&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUserPasswordAndRole</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUserPasswordAndRole&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span></span><br><span class="line">    update myuser</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        myuser.password=#&#123;password&#125;,</span><br><span class="line">        myuser.role=#&#123;role&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>访问 <a href="http://localhost:8001/test/update1">http://localhost:8001/test/update1</a> ，将得到下面信息：</p>
<blockquote>
<p>成功更新2条记录</p>
</blockquote>
<p>看一下数据库，数据库会变成下面这样：</p>
<table>
<thead>
<tr>
<th>id</th>
<th>username</th>
<th>password</th>
<th>role</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>admin</td>
<td>abcd1234</td>
<td>user</td>
</tr>
<tr>
<td></td>
<td>admin</td>
<td>abcd1234</td>
<td>user</td>
</tr>
</tbody></table>
<p>看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/update2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">update2</span><span class="params">()</span> &#123; <span class="comment">// 更新数据库，但是不更新对象u中值为空的数据</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    <span class="comment">//u.setPassword(&quot;abcd1234&quot;);</span></span><br><span class="line">    u.setRole(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> userService.updateUser(u);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;成功更新&quot;</span> + num + <span class="string">&quot;条记录&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.laisc.example3.entity.User&quot;</span>&gt;</span>-- 不更新值为空的数据</span><br><span class="line">    update myuser</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;id != null and id != -1 &quot;</span>&gt;</span>id=#&#123;id&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null and password != &#x27;&#x27; &quot;</span>&gt;</span>password=#&#123;password&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;role != null and role != &#x27;&#x27; &quot;</span>&gt;</span>role=#&#123;role&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>访问 <a href="http://localhost:8001/test/update2">http://localhost:8001/test/update2</a> ，将得到下面信息：</p>
<blockquote>
<p>成功更新2条记录</p>
</blockquote>
<p>看一下数据库，数据库会变成下面这样：</p>
<table>
<thead>
<tr>
<th>id</th>
<th>username</th>
<th>password</th>
<th>role</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>admin</td>
<td>abc123</td>
<td>user</td>
</tr>
<tr>
<td></td>
<td>admin</td>
<td>123</td>
<td>user</td>
</tr>
</tbody></table>
<p>最后看这一段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/delete&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">delete</span><span class="params">()</span> &#123; <span class="comment">// 删除记录</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> userService.deleteUser(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;成功删除&quot;</span> + num + <span class="string">&quot;条记录&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(String username)</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span>&gt;</span></span><br><span class="line">    delete</span><br><span class="line">    from myuser</span><br><span class="line">    where username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这一段比较简单，就是删除所有username值为admin的记录。</p>
<p>访问 <a href="http://localhost:8001/test/delete">http://localhost:8001/test/delete</a> ，你将看到：</p>
<blockquote>
<p>成功删除2条记录</p>
</blockquote>
<p>项目源代码下载：<a href="https://pan.baidu.com/s/1w0yKDOJsbOazc27OLM0WUQ?pwd=zvx3">https://pan.baidu.com/s/1w0yKDOJsbOazc27OLM0WUQ?pwd=zvx3</a></p>
<p>上一篇：SpringBoot使用Thymeleaf：<a href="https://laisc7301.github.io/blog/2024/01/04/202401040000SpringBoot%E4%BD%BF%E7%94%A8Thymeleaf/">https://laisc7301.github.io/blog/2024/01/04/202401040000SpringBoot%E4%BD%BF%E7%94%A8Thymeleaf/</a></p>
<p>下一篇：SpringBoot使用MongoDB：<a href="https://laisc7301.github.io/blog/2024/01/12/202401120000SpringBoot%E4%BD%BF%E7%94%A8MongoDB/">https://laisc7301.github.io/blog/2024/01/12/202401120000SpringBoot%E4%BD%BF%E7%94%A8MongoDB/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>MySQL</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot使用MongoDB</title>
    <url>/blog/2024/01/12/202401120000SpringBoot%E4%BD%BF%E7%94%A8MongoDB/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>首先按照图示新建项目：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401120000SpringBoot%E4%BD%BF%E7%94%A8MongoDB_1.png"></p>
<span id="more"></span>



<p>添加以下依赖：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401120000SpringBoot%E4%BD%BF%E7%94%A8MongoDB_2.png"></p>
<p>找到application.properties文件，并写入下面内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server.port=8001</span></span><br><span class="line"></span><br><span class="line"><span class="string">spring.data.mongodb.uri=mongodb://127.0.0.1:27017/mytest</span></span><br></pre></td></tr></table></figure>





<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401120000SpringBoot%E4%BD%BF%E7%94%A8MongoDB_3.png"></p>
<p>把代码贴出来，因为代码里的注释写得比较详细，这里就不多说了。</p>
<p>TestController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example4.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.laisc.example4.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.ListIndexesIterable;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.model.IndexOptions;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.model.Indexes;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.result.DeleteResult;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.result.UpdateResult;</span><br><span class="line"><span class="keyword">import</span> jakarta.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> org.bson.Document;</span><br><span class="line"><span class="keyword">import</span> org.bson.conversions.Bson;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.MongoTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Criteria;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Query;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Update;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/create&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">createCollection</span><span class="params">()</span> &#123; <span class="comment">//创建集合</span></span><br><span class="line">        <span class="comment">// 设置集合名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">collectionName</span> <span class="operator">=</span> <span class="string">&quot;test1&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建集合并返回集合信息</span></span><br><span class="line">        mongoTemplate.createCollection(collectionName);</span><br><span class="line">        <span class="comment">// 检测新的集合是否存在，返回创建结果</span></span><br><span class="line">        <span class="keyword">return</span> mongoTemplate.collectionExists(collectionName) ? <span class="string">&quot;创建视图成功&quot;</span> : <span class="string">&quot;创建视图失败&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/get1&quot;)</span><span class="comment">// 执行获取集合名称列表</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCollectionNames</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mongoTemplate.getCollectionNames().toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/get2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">collectionExists</span><span class="params">()</span> &#123;<span class="comment">// 检测集合是否存在</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">collectionName</span> <span class="operator">=</span> <span class="string">&quot;test1&quot;</span>;<span class="comment">//集合名</span></span><br><span class="line">        <span class="keyword">return</span> mongoTemplate.collectionExists(collectionName) ? <span class="string">&quot;集合存在&quot;</span> : <span class="string">&quot;集合不存在&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delall&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">dropCollection</span><span class="params">()</span> &#123; <span class="comment">//删除集合</span></span><br><span class="line">        <span class="comment">// 设置集合名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">collectionName</span> <span class="operator">=</span> <span class="string">&quot;test1&quot;</span>;</span><br><span class="line">        <span class="comment">// 执行删除集合</span></span><br><span class="line">        mongoTemplate.getCollection(collectionName).drop();</span><br><span class="line">        <span class="comment">// 检测集合是否存在，返回删除结果</span></span><br><span class="line">        <span class="keyword">return</span> !mongoTemplate.collectionExists(collectionName) ? <span class="string">&quot;删除集合成功&quot;</span> : <span class="string">&quot;删除集合失败&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/insert&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">insert</span><span class="params">()</span> &#123; <span class="comment">// 插入文档</span></span><br><span class="line">        <span class="comment">// 设置用户信息</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u.setId(<span class="number">100</span>);</span><br><span class="line">        u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        u.setPassword(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        <span class="comment">// 插入一条用户数据，如果文档信息已经存在就抛出异常</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> mongoTemplate.insert(u, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> u2; <span class="comment">// 输出存储结果</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">save</span><span class="params">()</span> &#123; <span class="comment">// 插入文档</span></span><br><span class="line">        <span class="comment">// 设置用户信息</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u.setId(<span class="number">100</span>);</span><br><span class="line">        u.setUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        u.setPassword(<span class="string">&quot;abcd&quot;</span>);</span><br><span class="line">        <span class="comment">// 存储用户信息,如果文档信息已经存在就执行更新</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> mongoTemplate.save(u, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出存储结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;存储的用户信息为：&quot;</span> + u2);</span><br><span class="line">        <span class="comment">//log.info(&quot;存储的用户信息为：&#123;&#125;&quot;, newUser);</span></span><br><span class="line">        <span class="keyword">return</span> u2.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * insert和save的区别</span></span><br><span class="line"><span class="comment">     * 插入重复数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 　　insert: 若新增数据的主键已经存在，则会抛 org.springframework.dao.DuplicateKeyException 异常提示主键重复，不保存当前数据。</span></span><br><span class="line"><span class="comment">     * 　　save: 若新增数据的主键已经存在，则会对当前已经存在的数据进行修改操作。</span></span><br><span class="line"><span class="comment">     * 批操作</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 　　insert: 可以一次性插入一整个列表，而不用进行遍历操作，效率相对较高</span></span><br><span class="line"><span class="comment">     * 　　save: 需要遍历列表，进行一个个的插入</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findall&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findAll</span><span class="params">()</span> &#123; <span class="comment">// 执行查询集合中全部文档信息</span></span><br><span class="line">        <span class="comment">// 执行查询集合中全部文档信息</span></span><br><span class="line">        List&lt;User&gt; documentList = mongoTemplate.findAll(User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        <span class="keyword">return</span> documentList.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findbyid&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findById</span><span class="params">()</span> &#123; <span class="comment">// 根据文档ID查询集合中文档数据</span></span><br><span class="line">        <span class="comment">// 设置查询的文档 ID</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="comment">// 根据文档ID查询集合中文档数据，并转换为对应 Java 对象</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> mongoTemplate.findById(id, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> u.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findone&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findOne</span><span class="params">()</span> &#123; <span class="comment">// 查询，但只输出第一条查询结果</span></span><br><span class="line">        <span class="comment">// 设置查询条件参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建条件对象</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(<span class="string">&quot;username&quot;</span>).is(username);</span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">        <span class="comment">// 查询一条文档，如果查询结果中有多条文档，那么就取第一条</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mongoTemplate.findOne(query, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> user.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findmany&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findByCondition</span><span class="params">()</span> &#123; <span class="comment">// 查询</span></span><br><span class="line">        <span class="comment">// 设置查询条件参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建条件对象</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(<span class="string">&quot;username&quot;</span>).is(username);</span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">        <span class="comment">// 查询并返回结果</span></span><br><span class="line">        List&lt;User&gt; documentList = mongoTemplate.find(query, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> documentList.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findmany2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findByCondition2</span><span class="params">()</span> &#123; <span class="comment">// 查询，并按照age字段的值升序排序</span></span><br><span class="line">        <span class="comment">// 设置查询条件参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建条件对象</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(<span class="string">&quot;username&quot;</span>).is(username);</span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中，并按照age字段的值升序排序。</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria).with(Sort.by(<span class="string">&quot;age&quot;</span>).ascending());</span><br><span class="line">        <span class="comment">// 查询并返回结果</span></span><br><span class="line">        List&lt;User&gt; documentList = mongoTemplate.find(query, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> documentList.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/find2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findByExistsField</span><span class="params">()</span> &#123; <span class="comment">//查询存在指定字段的值的文档数据</span></span><br><span class="line">        <span class="comment">// 设置查询条件参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">field</span> <span class="operator">=</span> <span class="string">&quot;username&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建条件</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(field).exists(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">        <span class="comment">// 查询并返回结果</span></span><br><span class="line">        List&lt;User&gt; documentList = mongoTemplate.find(query, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> documentList.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/update1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update</span><span class="params">()</span> &#123; <span class="comment">//更新集合中【匹配】查询到的第一条文档数据，如果没有找到就【创建并插入一个新文档】</span></span><br><span class="line">        <span class="comment">// 创建条件对象</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(<span class="string">&quot;username&quot;</span>).is(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">        <span class="comment">// 创建更新对象,并设置更新的内容</span></span><br><span class="line">        <span class="type">Update</span> <span class="variable">update</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Update</span>().set(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;root&quot;</span>).set(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;q123&quot;</span>);</span><br><span class="line">        <span class="comment">// 执行更新，如果没有找到匹配查询的文档，则创建并插入一个新文档</span></span><br><span class="line">        <span class="type">UpdateResult</span> <span class="variable">result</span> <span class="operator">=</span> mongoTemplate.upsert(query, update, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出结果信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">resultInfo</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (result.getMatchedCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            resultInfo = <span class="string">&quot;匹配到1条数据,对第一条数据进行了更改&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resultInfo = <span class="string">&quot;未匹配到数据,插入了一个新文档&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resultInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/update2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">updateFirst</span><span class="params">()</span> &#123;<span class="comment">// 更新集合中【匹配】查询到的【文档数据集合】中的【第一条数据】</span></span><br><span class="line">        <span class="comment">// 创建条件对象</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(<span class="string">&quot;username&quot;</span>).is(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">        <span class="comment">// 创建更新对象,并设置更新的内容</span></span><br><span class="line">        <span class="type">Update</span> <span class="variable">update</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Update</span>().set(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;a123&quot;</span>).set(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;a456&quot;</span>);</span><br><span class="line">        <span class="comment">// 执行更新</span></span><br><span class="line">        <span class="type">UpdateResult</span> <span class="variable">result</span> <span class="operator">=</span> mongoTemplate.updateFirst(query, update, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">resultInfo</span> <span class="operator">=</span> <span class="string">&quot;共匹配到&quot;</span> + result.getMatchedCount() + <span class="string">&quot;条数据,修改了&quot;</span> + result.getModifiedCount() + <span class="string">&quot;条数据&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/updatemany&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">updateMany</span><span class="params">()</span> &#123; <span class="comment">// 更新所有符合条件的文档</span></span><br><span class="line">        <span class="comment">// 创建条件对象</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(<span class="string">&quot;username&quot;</span>).is(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">        <span class="comment">// 设置更新字段和更新的内容</span></span><br><span class="line">        <span class="type">Update</span> <span class="variable">update</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Update</span>().set(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;root&quot;</span>).set(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;b123&quot;</span>);</span><br><span class="line">        <span class="comment">// 执行更新</span></span><br><span class="line">        <span class="type">UpdateResult</span> <span class="variable">result</span> <span class="operator">=</span> mongoTemplate.updateMulti(query, update, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出结果信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">resultInfo</span> <span class="operator">=</span> <span class="string">&quot;总共匹配到&quot;</span> + result.getMatchedCount() + <span class="string">&quot;条数据,修改了&quot;</span> + result.getModifiedCount() + <span class="string">&quot;条数据&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/remove&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">remove</span><span class="params">()</span> &#123; <span class="comment">// 执行删除匹配的全部文档信息</span></span><br><span class="line">        <span class="comment">// 设置查询条件参数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        <span class="comment">// 创建条件对象</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(<span class="string">&quot;username&quot;</span>).is(<span class="string">&quot;admin&quot;</span>).and(<span class="string">&quot;age&quot;</span>).is(<span class="number">8</span>);</span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">        <span class="comment">// 执行删除查找到的匹配的全部文档信息</span></span><br><span class="line">        <span class="type">DeleteResult</span> <span class="variable">result</span> <span class="operator">=</span> mongoTemplate.remove(query, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出结果信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">resultInfo</span> <span class="operator">=</span> <span class="string">&quot;成功删除 &quot;</span> + result.getDeletedCount() + <span class="string">&quot; 条文档信息&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> resultInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/remove2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findAndRemove</span><span class="params">()</span> &#123; <span class="comment">// 执行删除查找到的匹配的第一条文档,并返回删除的文档信息</span></span><br><span class="line">        <span class="comment">// 创建条件对象</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(<span class="string">&quot;username&quot;</span>).is(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">        <span class="comment">// 执行删除查找到的匹配的第一条文档,并返回删除的文档信息</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">result</span> <span class="operator">=</span> mongoTemplate.findAndRemove(query, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="comment">// 输出结果信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">resultInfo</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (result != <span class="literal">null</span>) &#123;</span><br><span class="line">            resultInfo = <span class="string">&quot;成功删除文档信息，文档内容为：&quot;</span> + result.toString();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resultInfo = <span class="string">&quot;找不到该文档。&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resultInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/createindex&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">createAscendingIndex</span><span class="params">()</span> &#123; <span class="comment">// 创建索引</span></span><br><span class="line">        <span class="comment">// 设置字段名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">field</span> <span class="operator">=</span> <span class="string">&quot;username&quot;</span>;</span><br><span class="line">        <span class="comment">// 创建索引</span></span><br><span class="line">        <span class="keyword">return</span> mongoTemplate.getCollection(<span class="string">&quot;test2&quot;</span>).createIndex(Indexes.ascending(field));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/createindex2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">createUniqueIndex</span><span class="params">()</span> &#123; <span class="comment">// 创建唯一索引</span></span><br><span class="line">        <span class="comment">// 设置字段名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">indexName</span> <span class="operator">=</span> <span class="string">&quot;password&quot;</span>;</span><br><span class="line">        <span class="comment">// 配置索引选项</span></span><br><span class="line">        <span class="type">IndexOptions</span> <span class="variable">options</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexOptions</span>();</span><br><span class="line">        <span class="comment">// 设置为唯一索引</span></span><br><span class="line">        options.unique(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 创建索引</span></span><br><span class="line">        <span class="keyword">return</span> mongoTemplate.getCollection(<span class="string">&quot;test2&quot;</span>).createIndex(Indexes.ascending(indexName), options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getindex&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getIndexAll</span><span class="params">()</span> &#123; <span class="comment">// 获取集合中全部索引信息</span></span><br><span class="line">        <span class="comment">// 获取集合中所有列表</span></span><br><span class="line">        ListIndexesIterable&lt;Document&gt; indexList = mongoTemplate.getCollection(<span class="string">&quot;test2&quot;</span>).listIndexes();</span><br><span class="line">        <span class="comment">// 创建字符串集合</span></span><br><span class="line">        List&lt;org.bson.Document&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 获取集合中全部索引信息</span></span><br><span class="line">        <span class="keyword">for</span> (org.bson.Document document : indexList) &#123;</span><br><span class="line">            list.add(document);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/removeindex&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">removeIndex</span><span class="params">()</span> &#123; <span class="comment">// 删除集合中某个索引</span></span><br><span class="line">        <span class="comment">// 设置索引名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">indexName</span> <span class="operator">=</span> <span class="string">&quot;username_1&quot;</span>;</span><br><span class="line">        <span class="comment">// 删除集合中某个索引</span></span><br><span class="line">        mongoTemplate.getCollection(<span class="string">&quot;test2&quot;</span>).dropIndex(indexName);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;已删除。&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/removeindexall&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">removeIndexAll</span><span class="params">()</span> &#123; <span class="comment">// 删除集合中全部索引</span></span><br><span class="line">        <span class="comment">// 删除集合中全部索引</span></span><br><span class="line">        mongoTemplate.getCollection(<span class="string">&quot;test2&quot;</span>).dropIndexes();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;已删除全部索引。&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/createview&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">createView</span><span class="params">()</span> &#123; <span class="comment">// 创建视图</span></span><br><span class="line">        <span class="comment">// 设置视图名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">newViewName</span> <span class="operator">=</span> <span class="string">&quot;userView&quot;</span>;</span><br><span class="line">        <span class="comment">// 设置获取数据的集合名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">collectionName</span> <span class="operator">=</span> <span class="string">&quot;test2&quot;</span>;</span><br><span class="line">        <span class="comment">// 定义视图的管道,可是设置视图显示的内容多个筛选条件</span></span><br><span class="line">        List&lt;Bson&gt; pipeline = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 设置条件，用于筛选集合中的文档数据，只有符合条件的才会映射到视图中</span></span><br><span class="line">        pipeline.add(Document.parse(<span class="string">&quot;&#123;$match:&#123;username:&#x27;admin&#x27;&#125;&#125;&quot;</span>));</span><br><span class="line">        <span class="comment">// 执行创建视图</span></span><br><span class="line">        mongoTemplate.getDb().createView(newViewName, collectionName, pipeline);</span><br><span class="line">        <span class="comment">// 检测新的集合是否存在，返回创建结果</span></span><br><span class="line">        <span class="keyword">return</span> mongoTemplate.collectionExists(newViewName) ? <span class="string">&quot;创建视图成功&quot;</span> : <span class="string">&quot;创建视图失败&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delall2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">dropCollection2</span><span class="params">()</span> &#123; <span class="comment">//之前的 dropCollection() 方法 删除【集合】，其实也可以删除【视图】</span></span><br><span class="line">        <span class="comment">// 设置集合名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">collectionName</span> <span class="operator">=</span> <span class="string">&quot;userView&quot;</span>;</span><br><span class="line">        <span class="comment">// 执行删除集合</span></span><br><span class="line">        mongoTemplate.getCollection(collectionName).drop();</span><br><span class="line">        <span class="comment">// 检测新的集合是否存在，返回删除结果</span></span><br><span class="line">        <span class="keyword">return</span> !mongoTemplate.collectionExists(collectionName) ? <span class="string">&quot;删除视图成功&quot;</span> : <span class="string">&quot;删除视图失败&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/dropview&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">dropView</span><span class="params">()</span> &#123; <span class="comment">//删除视图，也可以是集合</span></span><br><span class="line">        <span class="comment">// 设置待删除的视图名称</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">viewName</span> <span class="operator">=</span> <span class="string">&quot;test2&quot;</span>;</span><br><span class="line">        <span class="comment">// 检测视图是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (mongoTemplate.collectionExists(viewName)) &#123;</span><br><span class="line">            <span class="comment">// 删除视图</span></span><br><span class="line">            mongoTemplate.getDb().getCollection(viewName).drop();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;删除视图成功&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 检测新的集合是否存在，返回创建结果</span></span><br><span class="line">        <span class="keyword">return</span> !mongoTemplate.collectionExists(viewName) ? <span class="string">&quot;该视图不存在&quot;</span> : <span class="string">&quot;删除视图失败&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/find3&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">findByOperator</span><span class="params">()</span> &#123; <span class="comment">// 根据【逻辑运算符】查询集合中的文档数据</span></span><br><span class="line">        <span class="comment">// 设置查询条件参数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line">        <span class="comment">// 创建条件对象</span></span><br><span class="line">        <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> Criteria.where(<span class="string">&quot;age&quot;</span>).gt(min).lte(max);<span class="comment">//大于4或小于等于8</span></span><br><span class="line">        <span class="comment">// 创建查询对象，然后将条件对象添加到其中</span></span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">        <span class="comment">// 查询并返回结果</span></span><br><span class="line">        List&lt;User&gt; documentList = mongoTemplate.find(query, User.class, <span class="string">&quot;test2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> documentList.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>User.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example4.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">id</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> String username= <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String password= <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> String role= <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(Integer id, String username, String password, Integer age, String role)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.role = role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRole</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRole</span><span class="params">(String role)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.role = role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, role=&#x27;&quot;</span> + role + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>项目源代码下载：<a href="https://pan.baidu.com/s/11rZQUp6MOjPhCHQEvyWCwg?pwd=63mi">https://pan.baidu.com/s/11rZQUp6MOjPhCHQEvyWCwg?pwd=63mi</a></p>
<p>上一篇：SpringBoot使用MyBatis连接MySQL：<a href="https://laisc7301.github.io/blog/2024/01/07/202401070000SpringBoot%E4%BD%BF%E7%94%A8MyBatis%E8%BF%9E%E6%8E%A5MySQL/">https://laisc7301.github.io/blog/2024/01/07/202401070000SpringBoot%E4%BD%BF%E7%94%A8MyBatis%E8%BF%9E%E6%8E%A5MySQL/</a></p>
<p>下一篇：SpringBoot使用Redis：<a href="https://laisc7301.github.io/blog/2024/01/21/202401210000SpringBoot%E4%BD%BF%E7%94%A8Redis/">https://laisc7301.github.io/blog/2024/01/21/202401210000SpringBoot%E4%BD%BF%E7%94%A8Redis/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot使用Redis</title>
    <url>/blog/2024/01/21/202401210000SpringBoot%E4%BD%BF%E7%94%A8Redis/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>首先按照图示新建项目：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401210000SpringBoot%E4%BD%BF%E7%94%A8Redis_1.png"></p>
<span id="more"></span>



<p>添加以下依赖：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401210000SpringBoot%E4%BD%BF%E7%94%A8Redis_2.png"></p>
<p>找到application.properties文件，并写入下面内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server.port=8001</span></span><br><span class="line"></span><br><span class="line"><span class="string">spring.redis.host=localhost</span></span><br><span class="line"><span class="string">spring.redis.port=6379</span></span><br><span class="line"><span class="string">spring.redis.password=</span></span><br><span class="line"><span class="string">spring.redis.database=0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#也可以写成下面这样：</span></span><br><span class="line"><span class="comment">#spring:</span></span><br><span class="line"><span class="comment">#redis:</span></span><br><span class="line"><span class="comment">#host: localhost</span></span><br><span class="line"><span class="comment">#port: 6379</span></span><br><span class="line"><span class="comment">#password:</span></span><br><span class="line"><span class="comment">#database: 0</span></span><br></pre></td></tr></table></figure>



<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401210000SpringBoot%E4%BD%BF%E7%94%A8Redis_3.png"></p>
<p>贴出代码，代码里注释写得比较多，就不解释太多了。</p>
<p>TestController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.laisc.example5.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.SetOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/setvalue1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">setValue1</span><span class="params">()</span> &#123; <span class="comment">//使用JDK序列化策略设置键</span></span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;测试1&quot;</span>, <span class="string">&quot;测试123&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">out</span> <span class="operator">=</span> redisTemplate.opsForValue().get(<span class="string">&quot;测试1&quot;</span>).toString();</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/setmapvalue&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">setMapValue</span><span class="params">()</span> &#123; <span class="comment">//使用JDK序列化策略设置键</span></span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;ccc&quot;</span>, <span class="string">&quot;ddd&quot;</span>);</span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;map1&quot;</span>, map); <span class="comment">//直接存储Map对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">out</span> <span class="operator">=</span> redisTemplate.opsForValue().get(<span class="string">&quot;map1&quot;</span>).toString();</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/setvalue2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">setValue2</span><span class="params">()</span> &#123; <span class="comment">//使用String序列化策略设置键</span></span><br><span class="line">        stringRedisTemplate.opsForValue().set(<span class="string">&quot;测试2&quot;</span>, <span class="string">&quot;测试1234&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">out</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;测试2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * RedisTemplate和StringRedisTemplate的区别：</span></span><br><span class="line"><span class="comment">     * 两者的关系是StringRedisTemplate继承RedisTemplate。</span></span><br><span class="line"><span class="comment">     * 两者的数据是不共通的；也就是说StringRedisTemplate只能管理StringRedisTemplate里面的数据，RedisTemplate只能管理RedisTemplate中的数据，包括删除操作。</span></span><br><span class="line"><span class="comment">     * SDR默认采用的序列化策略有两种，一种是String的序列化策略，一种是JDK的序列化策略。</span></span><br><span class="line"><span class="comment">     * 使用场景：</span></span><br><span class="line"><span class="comment">     * StringRedisTemplate：当你的redis数据库里面本来存的是字符串数据或者你要存取的数据就是字符串类型数据的时候。</span></span><br><span class="line"><span class="comment">     * RedisTemplate：但是如果你的数据是复杂的对象类型，而取出的时候又不想做任何的数据转换，直接从Redis里面取出一个对象。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/setvalue3&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">setValue3</span><span class="params">()</span> &#123; <span class="comment">//使用String序列化策略设置键，并设置过期时间</span></span><br><span class="line">        stringRedisTemplate.opsForValue().set(<span class="string">&quot;测试3&quot;</span>, <span class="string">&quot;测试12345&quot;</span>, <span class="number">3600</span>, TimeUnit.SECONDS);<span class="comment">//设置过期时间为3600秒</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">out</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;测试3&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/setexpire&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">setExpire</span><span class="params">()</span> &#123; <span class="comment">//设置过期时间</span></span><br><span class="line">        <span class="keyword">return</span> stringRedisTemplate.expire(<span class="string">&quot;测试2&quot;</span>, <span class="number">3600</span>, TimeUnit.SECONDS);<span class="comment">//设置过期时间为3600秒</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * expire(String key, long timeout, TimeUnit unit)</span></span><br><span class="line"><span class="comment">         * 该方法用于设置过期时间</span></span><br><span class="line"><span class="comment">         * 当该键存在并且没有设置过期时间时，将设置过期时间并返回true</span></span><br><span class="line"><span class="comment">         * 当该键存在并且有过期时间时，将覆盖原来的过期时间并返回true</span></span><br><span class="line"><span class="comment">         * 当该键不存在时，返回false</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/persist&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">persist</span><span class="params">()</span> &#123;<span class="comment">// 移除过期时间</span></span><br><span class="line">        <span class="keyword">return</span> stringRedisTemplate.boundValueOps(<span class="string">&quot;测试3&quot;</span>).persist();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * persist()</span></span><br><span class="line"><span class="comment">         * 当存在过期时间并且已清除时，返回true</span></span><br><span class="line"><span class="comment">         * 当键不存在过期时间或找不到该键时，返回false</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/haskey&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasKey</span><span class="params">()</span> &#123; <span class="comment">//查看键是否存在</span></span><br><span class="line">        <span class="keyword">return</span> stringRedisTemplate.hasKey(<span class="string">&quot;测试2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/del&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">del</span><span class="params">()</span> &#123; <span class="comment">//删除值</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">out</span> <span class="operator">=</span> stringRedisTemplate.delete(<span class="string">&quot;测试2&quot;</span>).toString();</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * delete(String key)</span></span><br><span class="line"><span class="comment">         * 该方法用来删除值</span></span><br><span class="line"><span class="comment">         * 当值存在，删除并返回true</span></span><br><span class="line"><span class="comment">         * 当值不存在，返回false</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/addset&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addSet</span><span class="params">()</span> &#123; <span class="comment">//添加Set集合</span></span><br><span class="line">        SetOperations&lt;String, String&gt; set = stringRedisTemplate.opsForSet();</span><br><span class="line">        set.add(<span class="string">&quot;myset&quot;</span>, <span class="string">&quot;22&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;myset&quot;</span>, <span class="string">&quot;33&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;myset&quot;</span>, <span class="string">&quot;44&quot;</span>);</span><br><span class="line">        Set&lt;String&gt; resultSet = stringRedisTemplate.opsForSet().members(<span class="string">&quot;myset&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> resultSet.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/addset2&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addSet2</span><span class="params">()</span> &#123; <span class="comment">//批量添加Set集合</span></span><br><span class="line">        stringRedisTemplate.opsForSet().add(<span class="string">&quot;myset&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);<span class="comment">//向指定key中存放set集合</span></span><br><span class="line">        Set&lt;String&gt; resultSet1 = stringRedisTemplate.opsForSet().members(<span class="string">&quot;myset&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> resultSet1.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 当插入的Set元素重复时，会自动跳过重复的元素。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/addvalue&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">mycounter</span> <span class="operator">=</span> stringRedisTemplate.boundValueOps(<span class="string">&quot;counter&quot;</span>).increment(<span class="number">1</span>);<span class="comment">//先将counter累加1并更新到Redis，然后把累加后的值返回给mycounter</span></span><br><span class="line">        <span class="keyword">return</span> mycounter.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getexpire&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getExpire</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">time</span> <span class="operator">=</span> stringRedisTemplate.getExpire(<span class="string">&quot;测试3&quot;</span>); <span class="comment">//返回当前key所对应的剩余过期时间，单位为秒</span></span><br><span class="line">        <span class="keyword">return</span> time.toString();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * getExpire(String key)</span></span><br><span class="line"><span class="comment">         * 返回当前key所对应的剩余过期时间</span></span><br><span class="line"><span class="comment">         * 当返回值为-1，表示永不过期</span></span><br><span class="line"><span class="comment">         * 当返回值为-2，表示不存在该键</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/listpush&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">listPush</span><span class="params">()</span> &#123; <span class="comment">//将一些值插入列表中。</span></span><br><span class="line">        <span class="comment">// leftPush依次向右边添加</span></span><br><span class="line">        stringRedisTemplate.opsForList().rightPush(<span class="string">&quot;myList&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line">        stringRedisTemplate.opsForList().rightPush(<span class="string">&quot;myList&quot;</span>, <span class="string">&quot;2&quot;</span>);</span><br><span class="line">        stringRedisTemplate.opsForList().rightPush(<span class="string">&quot;myList&quot;</span>, <span class="string">&quot;A&quot;</span>);</span><br><span class="line">        stringRedisTemplate.opsForList().rightPush(<span class="string">&quot;myList&quot;</span>, <span class="string">&quot;B&quot;</span>);</span><br><span class="line">        stringRedisTemplate.opsForList().rightPush(<span class="string">&quot;myList&quot;</span>, <span class="string">&quot;C&quot;</span>);</span><br><span class="line">        <span class="comment">// leftPush依次向左边添加</span></span><br><span class="line">        stringRedisTemplate.opsForList().leftPush(<span class="string">&quot;myList&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getlist&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">GetList</span><span class="params">()</span> &#123; <span class="comment">// 查询列表中的元素</span></span><br><span class="line">        <span class="comment">// 查询类别所有元素</span></span><br><span class="line">        List&lt;String&gt; listAll = stringRedisTemplate.opsForList().range(<span class="string">&quot;myList&quot;</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 查询前3个元素</span></span><br><span class="line">        List&lt;String&gt; list = stringRedisTemplate.opsForList().range(<span class="string">&quot;myList&quot;</span>, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;listAll=&quot;</span> + listAll.toString() + <span class="string">&quot;  list=&quot;</span> + list.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/listremove&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">listRemove</span><span class="params">()</span> &#123; <span class="comment">// 删除列表中的元素</span></span><br><span class="line">        <span class="comment">// 删除从右到左前2个值为&#x27;B&#x27;的元素；</span></span><br><span class="line">        stringRedisTemplate.opsForList().remove(<span class="string">&quot;myList&quot;</span>, -<span class="number">2</span>, <span class="string">&quot;B&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * remove(String key, long count,Object value)</span></span><br><span class="line"><span class="comment">         * 从存储在键中的列表中删除等于值的元素的第一个计数事件。</span></span><br><span class="line"><span class="comment">         * count &gt; 0：删除从左到右前count个符合条件的元素；</span></span><br><span class="line"><span class="comment">         * count &lt; 0：删除从右到左前|count|个符合条件的元素；</span></span><br><span class="line"><span class="comment">         * count = 0：删除等于value的所有元素。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *下面将讲解Redis中的哈希表，哈希表其实就是Java里面的Map。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hashput&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hashPut</span><span class="params">()</span> &#123; <span class="comment">//添加哈希键值对</span></span><br><span class="line">        stringRedisTemplate.opsForHash().put(<span class="string">&quot;mytest:test1&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>);</span><br><span class="line">        stringRedisTemplate.opsForHash().put(<span class="string">&quot;mytest:test1&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>);</span><br><span class="line">        stringRedisTemplate.opsForHash().put(<span class="string">&quot;mytest:test1&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * put(String key, Object hashKey, Object value)</span></span><br><span class="line"><span class="comment">         * key 是哈希表名</span></span><br><span class="line"><span class="comment">         * hashKey 就是Map里的key，value 就是Map里的value</span></span><br><span class="line"><span class="comment">         * 当 hashKey 相同，后添加的将覆盖原有的。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hashget&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hashGet</span><span class="params">()</span> &#123; <span class="comment">//获取哈希键值对</span></span><br><span class="line">        Map&lt;Object, Object&gt; map = stringRedisTemplate.opsForHash().entries(<span class="string">&quot;mytest:test1&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> map.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hashdel&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hashDelete</span><span class="params">()</span> &#123; <span class="comment">//删除哈希表里的元素</span></span><br><span class="line">        stringRedisTemplate.opsForHash().delete(<span class="string">&quot;mytest:test1&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;e&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * delete(String key, Object... hashKeys)</span></span><br><span class="line"><span class="comment">         * 根据key 和 hashKeys 删除元素</span></span><br><span class="line"><span class="comment">         * key 是哈希表名</span></span><br><span class="line"><span class="comment">         * hashKey 就是Map里的key</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hashgetkeys&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hashGetKeys</span><span class="params">()</span> &#123; <span class="comment">//获取哈希表里的key集合</span></span><br><span class="line">        Set&lt;Object&gt; objects = stringRedisTemplate.opsForHash().keys(<span class="string">&quot;mytest:test1&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> objects.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hashgetvaluelist&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hashGetValueList</span><span class="params">()</span> &#123; <span class="comment">//获取哈希表里的value列表</span></span><br><span class="line">        List&lt;Object&gt; objects = stringRedisTemplate.opsForHash().values(<span class="string">&quot;mytest:test1&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> objects.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hashsize&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hashSize</span><span class="params">()</span> &#123;<span class="comment">// 获取哈希表大小</span></span><br><span class="line">        <span class="comment">// 获取map对象大小</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">size</span> <span class="operator">=</span> stringRedisTemplate.opsForHash().size(<span class="string">&quot;mytest:test1&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(size);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>项目源代码下载：<a href="https://pan.baidu.com/s/1sxrkiyjnCiUPEgCaRCsgtA?pwd=9z5e">https://pan.baidu.com/s/1sxrkiyjnCiUPEgCaRCsgtA?pwd=9z5e</a></p>
<p>上一篇：SpringBoot使用MongoDB：<a href="https://laisc7301.github.io/blog/2024/01/12/202401120000SpringBoot%E4%BD%BF%E7%94%A8MongoDB/">https://laisc7301.github.io/blog/2024/01/12/202401120000SpringBoot%E4%BD%BF%E7%94%A8MongoDB/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot使用ObjectMapper</title>
    <url>/blog/2024/01/24/202401240000SpringBoot%E4%BD%BF%E7%94%A8ObjectMapper/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401240000SpringBoot%E4%BD%BF%E7%94%A8ObjectMapper_1.png"></p>
<span id="more"></span>



<p>添加以下依赖：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401240000SpringBoot%E4%BD%BF%E7%94%A8ObjectMapper_2.png"></p>
<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401240000SpringBoot%E4%BD%BF%E7%94%A8ObjectMapper_3.png"></p>
<p>application.properties文件内容如下所示：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server.port=8001</span></span><br></pre></td></tr></table></figure>

<p>贴出代码，代码里的注释已经说明清楚了。</p>
<p>TestController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.example6.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.laisc.example6.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/tojson&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">tojson</span><span class="params">()</span> <span class="keyword">throws</span> JsonProcessingException &#123; <span class="comment">//将user对象转化为JSON格式数据</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1</span>, <span class="string">&quot;admin&quot;</span>, <span class="string">&quot;admin123&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> objectMapper.writeValueAsString(user);</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/toobj&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toObj</span><span class="params">()</span> <span class="keyword">throws</span> JsonProcessingException &#123; <span class="comment">//将JSON格式数据转化为user对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">jsonText</span> <span class="operator">=</span> <span class="string">&quot;&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;\&quot;id\&quot;: 1,&quot;</span> +</span><br><span class="line">                <span class="string">&quot;\&quot;username\&quot;: \&quot;user111\&quot;,&quot;</span> +</span><br><span class="line">                <span class="string">&quot;\&quot;password\&quot;: \&quot;user1234\&quot;,&quot;</span> +</span><br><span class="line">                <span class="string">&quot;\&quot;role\&quot;: \&quot;user\&quot;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> objectMapper.readValue(jsonText, User.class);</span><br><span class="line">        <span class="keyword">return</span> u.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>User.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.example6.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">id</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> String username= <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String password= <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String role= <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(Integer id, String username, String password, String role)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">        <span class="built_in">this</span>.role = role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRole</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRole</span><span class="params">(String role)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.role = role;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, role=&#x27;&quot;</span> + role + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>项目源代码下载：<a href="https://pan.baidu.com/s/14t1rP8L1UvIeZtlfTMXLTQ?pwd=kvm8">https://pan.baidu.com/s/14t1rP8L1UvIeZtlfTMXLTQ?pwd=kvm8</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot使用热部署</title>
    <url>/blog/2024/01/26/202401260000SpringBoot%E4%BD%BF%E7%94%A8%E7%83%AD%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>找到项目的pom.xml文件，向里面添加下面内容：</p>
<p>找到&lt;dependencies&gt;标签向里面添加内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>找到&lt;plugin&gt;标签向里面添加内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--没有该项配置，热部署不会起作用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud Alibaba安装NACOS</title>
    <url>/blog/2024/01/26/202401260001SpringCloudAlibaba%E5%AE%89%E8%A3%85NACOS/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>首先先去GitHub下载NACOS：<a href="https://github.com/alibaba/nacos/releases">https://github.com/alibaba/nacos/releases</a></p>
<p>下载后解压，打开cmd并进入bin文件夹，运行命令：startup.cmd -m standalone</p>
<p>然后打开 <a href="http://localhost:8848/nacos/index.html">http://localhost:8848/nacos/index.html</a> </p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401260001SpringCloudAlibaba%E5%AE%89%E8%A3%85NACOS_1.png"></p>
<p>默认账号：nacos<br>默认密码：nacos</p>
<p>登录后看到下面页面：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401260001SpringCloudAlibaba%E5%AE%89%E8%A3%85NACOS_2.png"></p>
<p>搞定！</p>
<p>下一篇：Spring Cloud Alibaba项目创建： <a href="https://laisc7301.github.io/blog/2024/01/27/202401270000SpringCloudAlibaba%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/">https://laisc7301.github.io/blog/2024/01/27/202401270000SpringCloudAlibaba%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud Alibaba项目创建</title>
    <url>/blog/2024/01/27/202401270000SpringCloudAlibaba%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>首先按照图示新建项目：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270000SpringCloudAlibaba%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA_1.png"></p>
<span id="more"></span>

<p>找到pom.xml文件，并修改为下面内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.laisc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-cloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Environment Settings --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring Settings --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR1<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-cloud-alibaba.version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud-alibaba.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring-cloud 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring-cloud-alibaba 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Compiler 插件, 设定 JDK 版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">showWarnings</span>&gt;</span>true<span class="tag">&lt;/<span class="name">showWarnings</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 打包 jar 文件时，配置 manifest 文件，加入 lib 包的 jar 依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">addMavenDescriptor</span>&gt;</span>false<span class="tag">&lt;/<span class="name">addMavenDescriptor</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                                <span class="comment">&lt;!-- Add directory entries --&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">addDefaultImplementationEntries</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addDefaultImplementationEntries</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">addDefaultSpecificationEntries</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addDefaultSpecificationEntries</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- resource --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- install --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- clean --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- ant --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-antrun-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- dependency --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Java Document Generate --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>prepare-package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- YUI Compressor (CSS/JS压缩) --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.alchim31.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>yuicompressor-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>prepare-package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>compress<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">jswarn</span>&gt;</span>false<span class="tag">&lt;/<span class="name">jswarn</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">nosuffix</span>&gt;</span>true<span class="tag">&lt;/<span class="name">nosuffix</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">linebreakpos</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">linebreakpos</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">force</span>&gt;</span>true<span class="tag">&lt;/<span class="name">force</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.js<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.css<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.min.js<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.min.css<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 资源文件配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.java<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-repos<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Aliyun Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>sonatype-repos<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Sonatype Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>sonatype-repos-s<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Sonatype Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/content/repositories/snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Snapshots<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-milestones<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Milestones<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/milestone<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-repos<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Aliyun Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>删除src文件夹。</p>
<p>最后整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270000SpringCloudAlibaba%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA_2.png"></p>
<p>完成！</p>
<p>项目源代码下载：<a href="https://pan.baidu.com/s/1Wogcld2Pc6mTatuhnM5EUA?pwd=m5wp">https://pan.baidu.com/s/1Wogcld2Pc6mTatuhnM5EUA?pwd=m5wp</a></p>
<p>上一篇：Spring Cloud Alibaba安装NACOS：<a href="https://laisc7301.github.io/blog/2024/01/26/202401260001SpringCloudAlibaba%E5%AE%89%E8%A3%85NACOS/">https://laisc7301.github.io/blog/2024/01/26/202401260001SpringCloudAlibaba%E5%AE%89%E8%A3%85NACOS/</a></p>
<p>下一篇：Spring Cloud Alibaba创建服务提供者：<a href="https://laisc7301.github.io/blog/2024/01/27/202401270001SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85/">https://laisc7301.github.io/blog/2024/01/27/202401270001SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud Alibaba创建服务提供者</title>
    <url>/blog/2024/01/27/202401270001SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本篇内容需要在上一篇的基础上进行。</p>
<p>请找到上一篇的项目代码，本篇在上一篇的源代码上进行编写。</p>
<p>本系列教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>接着上一篇继续来。</p>
<p>首先按照图示新建模块：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270001SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85_1.png"></p>
<span id="more"></span>



<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270001SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85_2.png"></p>
<p>修改pom.xml文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.laisc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-cloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-provider<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Boot Begin --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Boot End --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring Cloud Begin --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Nacos 注册与发现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Nacos 分布式配置中心 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Cloud End--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.moonce.provider.ProviderApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>添加application.yml文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">my-provider</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>

<p>其它文件的源代码：</p>
<p>ProviderApplication.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.provider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProviderApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ProviderApplication.class, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;ok!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ProviderController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.provider.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProviderController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/test/&#123;message&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(<span class="meta">@PathVariable</span> String message)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;当前服务收到消息： &quot;</span> + message + <span class="string">&quot;， 该服务由端口： &quot;</span> + port + <span class="string">&quot;提供。&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>启动Nacos，启动项目，访问 <a href="http://localhost:8081/test/hello">http://localhost:8081/test/hello</a> ，</p>
<p>你将看到：</p>
<blockquote>
<p>当前服务收到消息： hello， 该服务由端口： 8081提供。</p>
</blockquote>
<p>访问 <a href="http://localhost:8848/nacos/index.html">http://localhost:8848/nacos/index.html</a> ，打开【服务管理】-【服务列表】</p>
<p>你将看到下面页面：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270001SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85_3.png"></p>
<p>项目源代码下载：<a href="https://pan.baidu.com/s/19P6K4dLO1QwYCYI93Btmvg?pwd=3agh">https://pan.baidu.com/s/19P6K4dLO1QwYCYI93Btmvg?pwd=3agh</a></p>
<p>上一篇：Spring Cloud Alibaba项目创建： <a href="https://laisc7301.github.io/blog/2024/01/27/202401270000SpringCloudAlibaba%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/">https://laisc7301.github.io/blog/2024/01/27/202401270000SpringCloudAlibaba%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/</a></p>
<p>下一篇：Spring Cloud Alibaba创建服务消费者：<a href="https://laisc7301.github.io/blog/2024/01/27/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85/">https://laisc7301.github.io/blog/2024/01/27/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud Alibaba创建服务消费者</title>
    <url>/blog/2024/01/27/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本篇内容需要在上一篇的基础上进行。</p>
<p>请找到上一篇的项目代码，本篇在上一篇的源代码上进行编写。</p>
<p>本系列教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>接着上一篇继续。</p>
<p>首先按照图示新建模块：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85_1.png"></p>
<span id="more"></span>



<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85_2.png"></p>
<p>修改pom.xml文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.laisc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-cloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Boot Begin --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Boot End --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring Cloud Begin --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Nacos 注册与发现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Nacos 分布式配置中心 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Cloud End--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>org.laisc.consumer.ConsumerApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>添加application.yml文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">my-consumer</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9091</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>



<p>其它文件的源代码：</p>
<p>ConsumerApplication.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsumerApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ConsumerApplication.class, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;ok!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>NacosConsumerConfiguration.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.consumer.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NacosConsumerConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ConsumerController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.consumer.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.ServiceInstance;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalancerClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsumerController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoadBalancerClient loadBalancerClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.application.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String appName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/test/app/name&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用 LoadBalanceClient 和 RestTemplate 结合的方式来访问</span></span><br><span class="line">        <span class="type">ServiceInstance</span> <span class="variable">serviceInstance</span> <span class="operator">=</span> loadBalancerClient.choose(<span class="string">&quot;my-provider&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> String.format(<span class="string">&quot;http://%s:%s/test/%s&quot;</span>, serviceInstance.getHost(), serviceInstance.getPort(), appName);</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(url, String.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>找到服务，并添加服务，如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85_3.png"></p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85_4.png"></p>
<p>依次选择【服务】-【添加服务】-【Spring Boot】</p>
<p>完成后，启动两个服务，启动Nacos。</p>
<p>访问 <a href="http://localhost:9091/test/app/name">http://localhost:9091/test/app/name</a> ，你将看到：</p>
<blockquote>
<p>当前服务收到消息： my-consumer， 该服务由端口： 8081提供。</p>
</blockquote>
<p>访问 <a href="http://localhost:8848/nacos/index.html">http://localhost:8848/nacos/index.html</a> ，打开【服务管理】-【服务列表】</p>
<p>你将看到下面页面：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85_5.png"></p>
<p>项目源代码下载：<a href="https://pan.baidu.com/s/14eAVgJBPC-M1oCBgyr3SFw?pwd=ry19">https://pan.baidu.com/s/14eAVgJBPC-M1oCBgyr3SFw?pwd=ry19</a></p>
<p>上一篇：Spring Cloud Alibaba创建服务提供者：<a href="https://laisc7301.github.io/blog/2024/01/27/202401270001SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85/">https://laisc7301.github.io/blog/2024/01/27/202401270001SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85/</a></p>
<p>下一篇：Spring Cloud Alibaba创建服务消费者Feign(负载均衡)：<a href="https://laisc7301.github.io/blog/2024/01/28/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)/">https://laisc7301.github.io/blog/2024/01/28/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud Alibaba创建服务消费者Feign(负载均衡)</title>
    <url>/blog/2024/01/28/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本篇内容需要在上一篇的基础上进行。</p>
<p>请找到上一篇的项目代码，本篇在上一篇的源代码上进行编写。</p>
<p>本系列教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>接着上一篇继续。</p>
<p>首先按照图示新建模块：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)_1.png"></p>
<span id="more"></span>



<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)_2.png"></p>
<p>修改pom.xml文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.laisc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-cloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-consumer-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Boot Begin --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Boot End --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring Cloud Begin --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Nacos 注册与发现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- feign  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- sentinel 熔断 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Nacos 分布式配置中心 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Cloud End--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>org.laisc.consumer.feign.ConsumerFeignApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>添加application.yml文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">my-consumer-feign</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9092</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>



<p>其它文件的源代码：</p>
<p> ConsumerFeignApplication.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.consumer.feign;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsumerFeignApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ConsumerFeignApplication.class, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;ok!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>FeignService.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.consumer.feign.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;my-provider&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FeignService</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/test/&#123;message&#125;&quot;)</span></span><br><span class="line">    String <span class="title function_">test</span><span class="params">(<span class="meta">@PathVariable(&quot;message&quot;)</span> String message)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>ConsumerFeignController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.consumer.feign.conttroller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.laisc.consumer.feign.service.FeignService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsumerFeignController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FeignService FeignService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/test/hi&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> FeignService.test(<span class="string">&quot;Hi Feign&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>启动<code>ProviderApplication</code>和<code>ConsumerFeignApplication</code></p>
<p>打开 <a href="http://localhost:9092/test/hi">http://localhost:9092/test/hi</a> ，你会在浏览器上看到：</p>
<blockquote>
<p>当前服务收到消息： Hi Feign， 该服务由端口： 8081提供。</p>
</blockquote>
<h3 id="测试负载均衡"><a href="#测试负载均衡" class="headerlink" title="测试负载均衡"></a>测试负载均衡</h3><p>右击服务中的<code>ProviderApplication</code>，复制配置，按照图示配置好。</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)_3.png"></p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)_4.png"></p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)_5.png"></p>
<p>依次启动<code>ProviderApplication</code>、<code>ConsumerFeignApplication</code>和新添加的服务<code>ProviderApplication (1)</code></p>
<p>在浏览器上多次访问 <a href="http://localhost:9092/test/hi">http://localhost:9092/test/hi</a> ，浏览器交替显示：</p>
<blockquote>
<p>当前服务收到消息： Hi Feign， 该服务由端口： 8081提供。</p>
</blockquote>
<blockquote>
<p>当前服务收到消息： Hi Feign， 该服务由端口： 8082提供。</p>
</blockquote>
<p>项目源代码下载：<a href="https://pan.baidu.com/s/1-Ncvfk480DjVg-H2ULCtLg?pwd=mbuw">https://pan.baidu.com/s/1-Ncvfk480DjVg-H2ULCtLg?pwd=mbuw</a></p>
<p>上一篇：Spring Cloud Alibaba创建服务消费者：<a href="https://laisc7301.github.io/blog/2024/01/27/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85/">https://laisc7301.github.io/blog/2024/01/27/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85/</a></p>
<p>下一篇：Spring Cloud Alibaba添加熔断机制Sentinel：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290000SpringCloudAlibaba%E6%B7%BB%E5%8A%A0%E7%86%94%E6%96%AD%E6%9C%BA%E5%88%B6Sentinel/">https://laisc7301.github.io/blog/2024/01/29/202401290000SpringCloudAlibaba%E6%B7%BB%E5%8A%A0%E7%86%94%E6%96%AD%E6%9C%BA%E5%88%B6Sentinel/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud Alibaba添加熔断机制Sentinel</title>
    <url>/blog/2024/01/29/202401290000SpringCloudAlibaba%E6%B7%BB%E5%8A%A0%E7%86%94%E6%96%AD%E6%9C%BA%E5%88%B6Sentinel/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本篇内容需要在上一篇的基础上进行。</p>
<p>请找到上一篇的项目代码，本篇在上一篇的源代码上进行编写。</p>
<p>本系列教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>打开上一个模块的源代码(my-consumer-feign)，我们继续进行。</p>
<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401290000SpringCloudAlibaba%E6%B7%BB%E5%8A%A0%E7%86%94%E6%96%AD%E6%9C%BA%E5%88%B6Sentinel_1.png"></p>
<span id="more"></span>



<p>找到pom.xml文件，在&lt;dependencies&gt;标签里添加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- sentinel 熔断 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>找到application.yml，在里面添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<p>其它文件的源代码：</p>
<p>FeignServiceFallback.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.consumer.feign.service.fallback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.laisc.consumer.feign.service.FeignService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FeignServiceFallback</span> <span class="keyword">implements</span> <span class="title class_">FeignService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test fallback&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>FeignService.java</p>
<p>修改@FeignClient注解，最终变成下面这样：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.consumer.feign.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.laisc.consumer.feign.service.fallback.FeignServiceFallback;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;my-provider&quot;, fallback = FeignServiceFallback.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FeignService</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/test/&#123;message&#125;&quot;)</span></span><br><span class="line">    String <span class="title function_">test</span><span class="params">(<span class="meta">@PathVariable(&quot;message&quot;)</span> String message)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>现在，关闭所有服务，只打开<code>ConsumerFeignApplication</code>，访问 <a href="http://localhost:9092/test/hi">http://localhost:9092/test/hi</a> ，你就会看到：</p>
<blockquote>
<p>test fallback</p>
</blockquote>
<p>项目源代码下载：<a href="https://pan.baidu.com/s/1_g7WWmJCxtHVIW-UdGVqHQ?pwd=lnrk">https://pan.baidu.com/s/1_g7WWmJCxtHVIW-UdGVqHQ?pwd=lnrk</a></p>
<p>上一篇：Spring Cloud Alibaba创建服务消费者Feign(负载均衡)：<a href="https://laisc7301.github.io/blog/2024/01/28/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)/">https://laisc7301.github.io/blog/2024/01/28/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)/</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot系列基础教程</title>
    <url>/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="SpringBoot基础教程"><a href="#SpringBoot基础教程" class="headerlink" title="SpringBoot基础教程"></a>SpringBoot基础教程</h1><h4 id="1-SpringBoot快速入门"><a href="#1-SpringBoot快速入门" class="headerlink" title="1.SpringBoot快速入门"></a>1.<a href="https://laisc7301.github.io/blog/2024/01/03/202401030000SpringBoot%E5%85%A5%E9%97%A81/">SpringBoot快速入门</a></h4><h4 id="2-SpringBoot使用Thymeleaf"><a href="#2-SpringBoot使用Thymeleaf" class="headerlink" title="2.SpringBoot使用Thymeleaf"></a>2.<a href="https://laisc7301.github.io/blog/2024/01/04/202401040000SpringBoot%E4%BD%BF%E7%94%A8Thymeleaf/">SpringBoot使用Thymeleaf</a></h4><h4 id="3-SpringBoot使用MyBatis连接MySQL"><a href="#3-SpringBoot使用MyBatis连接MySQL" class="headerlink" title="3.SpringBoot使用MyBatis连接MySQL"></a>3.<a href="https://laisc7301.github.io/blog/2024/01/07/202401070000SpringBoot%E4%BD%BF%E7%94%A8MyBatis%E8%BF%9E%E6%8E%A5MySQL/">SpringBoot使用MyBatis连接MySQL</a></h4><h4 id="4-SpringBoot使用MongoDB"><a href="#4-SpringBoot使用MongoDB" class="headerlink" title="4.SpringBoot使用MongoDB"></a>4.<a href="https://laisc7301.github.io/blog/2024/01/12/202401120000SpringBoot%E4%BD%BF%E7%94%A8MongoDB/">SpringBoot使用MongoDB</a></h4><h4 id="5-SpringBoot使用Redis"><a href="#5-SpringBoot使用Redis" class="headerlink" title="5.SpringBoot使用Redis"></a>5.<a href="https://laisc7301.github.io/blog/2024/01/21/202401210000SpringBoot%E4%BD%BF%E7%94%A8Redis/">SpringBoot使用Redis</a></h4><h1 id="SpringBoot干货"><a href="#SpringBoot干货" class="headerlink" title="SpringBoot干货"></a>SpringBoot干货</h1><h4 id="1-SpringBoot使用ObjectMapper"><a href="#1-SpringBoot使用ObjectMapper" class="headerlink" title="1.SpringBoot使用ObjectMapper"></a>1.<a href="https://laisc7301.github.io/blog/2024/01/24/202401240000SpringBoot%E4%BD%BF%E7%94%A8ObjectMapper/">SpringBoot使用ObjectMapper</a></h4><h4 id="2-SpringBoot使用热部署"><a href="#2-SpringBoot使用热部署" class="headerlink" title="2.SpringBoot使用热部署"></a>2.<a href="https://laisc7301.github.io/blog/2024/01/26/202401260000SpringBoot%E4%BD%BF%E7%94%A8%E7%83%AD%E9%83%A8%E7%BD%B2/">SpringBoot使用热部署</a></h4><h4 id="3-SpringBoot使用Session"><a href="#3-SpringBoot使用Session" class="headerlink" title="3.SpringBoot使用Session"></a>3.<a href="https://laisc7301.github.io/blog/2024/01/31/202401310000SpringBoot%E4%BD%BF%E7%94%A8Session/">SpringBoot使用Session</a></h4><h1 id="Spring-Cloud-Alibaba基础教程"><a href="#Spring-Cloud-Alibaba基础教程" class="headerlink" title="Spring Cloud Alibaba基础教程"></a>Spring Cloud Alibaba基础教程</h1><h4 id="1-Spring-Cloud-Alibaba安装NACOS"><a href="#1-Spring-Cloud-Alibaba安装NACOS" class="headerlink" title="1.Spring Cloud Alibaba安装NACOS"></a>1.<a href="https://laisc7301.github.io/blog/2024/01/26/202401260001SpringCloudAlibaba%E5%AE%89%E8%A3%85NACOS/">Spring Cloud Alibaba安装NACOS</a></h4><h4 id="2-Spring-Cloud-Alibaba项目创建"><a href="#2-Spring-Cloud-Alibaba项目创建" class="headerlink" title="2.Spring Cloud Alibaba项目创建"></a>2.<a href="https://laisc7301.github.io/blog/2024/01/27/202401270000SpringCloudAlibaba%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/">Spring Cloud Alibaba项目创建</a></h4><h4 id="3-Spring-Cloud-Alibaba创建服务提供者"><a href="#3-Spring-Cloud-Alibaba创建服务提供者" class="headerlink" title="3.Spring Cloud Alibaba创建服务提供者"></a>3.<a href="https://laisc7301.github.io/blog/2024/01/27/202401270001SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85/">Spring Cloud Alibaba创建服务提供者</a></h4><h4 id="4-Spring-Cloud-Alibaba创建服务消费者"><a href="#4-Spring-Cloud-Alibaba创建服务消费者" class="headerlink" title="4.Spring Cloud Alibaba创建服务消费者"></a>4.<a href="https://laisc7301.github.io/blog/2024/01/27/202401270002SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85/">Spring Cloud Alibaba创建服务消费者</a></h4><h4 id="5-Spring-Cloud-Alibaba创建服务消费者Feign-负载均衡"><a href="#5-Spring-Cloud-Alibaba创建服务消费者Feign-负载均衡" class="headerlink" title="5.Spring Cloud Alibaba创建服务消费者Feign(负载均衡)"></a>5.<a href="https://laisc7301.github.io/blog/2024/01/28/202401280000SpringCloudAlibaba%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85Feign(%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1)/">Spring Cloud Alibaba创建服务消费者Feign(负载均衡)</a></h4><h4 id="6-Spring-Cloud-Alibaba添加熔断机制Sentinel"><a href="#6-Spring-Cloud-Alibaba添加熔断机制Sentinel" class="headerlink" title="6.Spring Cloud Alibaba添加熔断机制Sentinel"></a>6.<a href="https://laisc7301.github.io/blog/2024/01/29/202401290000SpringCloudAlibaba%E6%B7%BB%E5%8A%A0%E7%86%94%E6%96%AD%E6%9C%BA%E5%88%B6Sentinel/">Spring Cloud Alibaba添加熔断机制Sentinel</a></h4>]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot使用Session</title>
    <url>/blog/2024/01/31/202401310000SpringBoot%E4%BD%BF%E7%94%A8Session/</url>
    <content><![CDATA[<blockquote>
<p>[!NOTE]</p>
<p>本教程是《SpringBoot系列基础教程》之一，教程目录：<a href="https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/">https://laisc7301.github.io/blog/2024/01/29/202401290001SpringBoot%E7%B3%BB%E5%88%97%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</a></p>
</blockquote>
<p>首先按照图示新建项目：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401310000SpringBoot%E4%BD%BF%E7%94%A8Session_1.png"></p>
<span id="more"></span>

<p>添加以下依赖：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401310000SpringBoot%E4%BD%BF%E7%94%A8Session_2.png"></p>
<p>找到application.properties文件，并写入下面内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server.port=8001</span></span><br></pre></td></tr></table></figure>

<p>整个项目的文件结构如下图所示：</p>
<p><img src="https://laisc7301.github.io/files/img/2024/202401310000SpringBoot%E4%BD%BF%E7%94%A8Session_3.png"></p>
<p>贴出代码：</p>
<p>TestController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.laisc.example7.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/set&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">set</span><span class="params">(HttpSession session)</span> &#123; <span class="comment">//设置值</span></span><br><span class="line">        session.setAttribute(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;laisc&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;成功设置！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/get&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">get</span><span class="params">(HttpSession session)</span> &#123; <span class="comment">//获取值</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String) session.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/remove&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">remove</span><span class="params">(HttpSession session)</span> &#123; <span class="comment">//删除值</span></span><br><span class="line">       session.removeAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;成功删除！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/reset&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">reset</span><span class="params">(HttpSession session)</span> &#123; <span class="comment">//删除所有值</span></span><br><span class="line">        session.invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;已重置！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>项目源代码下载：<a href="https://pan.baidu.com/s/1-Cl0aJVosdjTYPwUYfHR6Q?pwd=wpf4">https://pan.baidu.com/s/1-Cl0aJVosdjTYPwUYfHR6Q?pwd=wpf4</a></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo使用草稿</title>
    <url>/blog/2024/08/15/202408150000Hexo%E4%BD%BF%E7%94%A8%E8%8D%89%E7%A8%BF/</url>
    <content><![CDATA[<h2 id="建立文章草稿"><a href="#建立文章草稿" class="headerlink" title="建立文章草稿"></a>建立文章草稿</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo new draft &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo n draft &lt;title&gt;</span><br></pre></td></tr></table></figure>



<h2 id="本机预览草稿"><a href="#本机预览草稿" class="headerlink" title="本机预览草稿"></a>本机预览草稿</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo S --draft</span><br></pre></td></tr></table></figure>



<h2 id="将草稿发布为正式文章"><a href="#将草稿发布为正式文章" class="headerlink" title="将草稿发布为正式文章"></a>将草稿发布为正式文章</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo P &lt;filename&gt;</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo p &lt;filename&gt;</span><br></pre></td></tr></table></figure>

<p>其中 <code>&lt;filename&gt;</code> 为不包含 <code>md</code> 后缀的文章名称。它的原理只是将文章从 <code>source/_drafts</code> 移动到 <code>source/_posts</code> 而已。</p>
<blockquote>
<p>若日后想将正式文章转为为草稿，只需手动将文章从 <code>source/_posts</code> 目录移动到 <code>source/_drafts</code> 目录即可。</p>
</blockquote>
]]></content>
      <categories>
        <category>编程</category>
        <category>Node.js</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>Node.js</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>油猴脚本：记住Google搜索语言设置</title>
    <url>/blog/Tampermonkey-remember-Google-search-language-settings/index.html</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202305300000%E8%AE%B0%E4%BD%8FGoogle%E6%90%9C%E7%B4%A2%E8%AF%AD%E8%A8%80%E8%AE%BE%E7%BD%AE.png"></p>
<p>记住Google搜索语言设置，不用每次设置语言</p>
<p>下载地址：<a href="https://greasyfork.org/zh-CN/scripts/459251-%E8%AE%B0%E4%BD%8Fgoogle%E6%90%9C%E7%B4%A2%E8%AF%AD%E8%A8%80%E8%AE%BE%E7%BD%AE">https://greasyfork.org/zh-CN/scripts/459251-%E8%AE%B0%E4%BD%8Fgoogle%E6%90%9C%E7%B4%A2%E8%AF%AD%E8%A8%80%E8%AE%BE%E7%BD%AE</a></p>
<p>源码：<a href="https://github.com/laisc7301/remember-google-language">https://github.com/laisc7301/remember-google-language</a></p>
]]></content>
  </entry>
  <entry>
    <title>文章分类</title>
    <url>/blog/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/blog/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>关于</title>
    <url>/blog/about/index.html</url>
    <content><![CDATA[<p>作者：睿虎<br>我的Blogger：<a href="https://laisc7301.blogspot.com/">https://laisc7301.blogspot.com/</a><br>我的邮箱：<a href="mailto:&#x6c;&#x61;&#105;&#115;&#x63;&#55;&#x33;&#48;&#x31;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;">&#x6c;&#x61;&#105;&#115;&#x63;&#55;&#x33;&#48;&#x31;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a></p>
]]></content>
  </entry>
  <entry>
    <title>睿火正则小工具</title>
    <url>/blog/wisefire-regular-tool/index.html</url>
    <content><![CDATA[<h1 id="睿火正则小工具"><a href="#睿火正则小工具" class="headerlink" title="睿火正则小工具"></a>睿火正则小工具</h1><p><img src="https://laisc7301.github.io/blog/wisefire-regular-tool/wisefire-regular-tool-v1.4.6.png" alt="wisefire-regular-tool-v1.4.6.png"><br><img src="https://laisc7301.github.io/blog/wisefire-regular-tool/wisefire-regular-tool-v1.4.6_2.png" alt="wisefire-regular-tool-v1.4.6_2.png"><br><img src="https://laisc7301.github.io/blog/wisefire-regular-tool/wisefire-regular-tool-v1.4.6_3.png" alt="wisefire-regular-tool-v1.4.6_3.png"><br><img src="https://laisc7301.github.io/blog/wisefire-regular-tool/wisefire-regular-tool-v1.4.6_4.png" alt="wisefire-regular-tool-v1.4.6_4.png"><br><img src="https://laisc7301.github.io/blog/wisefire-regular-tool/wisefire-regular-tool-v1.4.6_5.png" alt="wisefire-regular-tool-v1.4.6_5.png"></p>
<p>睿火正则小工具，解决正则查找、匹配、替换等的需要。</p>
<h2 id="软件下载：https-github-com-laisc7301-wisefire-regular-tool-releases"><a href="#软件下载：https-github-com-laisc7301-wisefire-regular-tool-releases" class="headerlink" title="软件下载：https://github.com/laisc7301/wisefire-regular-tool/releases"></a>软件下载：<a href="https://github.com/laisc7301/wisefire-regular-tool/releases">https://github.com/laisc7301/wisefire-regular-tool/releases</a></h2><h2 id="源代码：https-github-com-laisc7301-wisefire-regular-tool"><a href="#源代码：https-github-com-laisc7301-wisefire-regular-tool" class="headerlink" title="源代码：https://github.com/laisc7301/wisefire-regular-tool"></a>源代码：<a href="https://github.com/laisc7301/wisefire-regular-tool">https://github.com/laisc7301/wisefire-regular-tool</a></h2>]]></content>
  </entry>
  <entry>
    <title>火狐浏览器扩展——音量增强小工具</title>
    <url>/blog/volume-controller/index.html</url>
    <content><![CDATA[<p><img src="https://laisc7301.github.io/files/img/2023/202305280000%E9%9F%B3%E9%87%8F%E5%A2%9E%E5%BC%BA%E5%99%A8v1.4.png"></p>
<p>火狐浏览器扩展——音量增强小工具，扩大网页音量</p>
<p>下载地址：<a href="https://addons.mozilla.org/zh-CN/firefox/addon/%E9%9F%B3%E9%87%8F%E5%A2%9E%E5%BC%BA%E5%99%A8/">https://addons.mozilla.org/zh-CN/firefox/addon/%E9%9F%B3%E9%87%8F%E5%A2%9E%E5%BC%BA%E5%99%A8/</a></p>
<p>源码：<a href="https://github.com/laisc7301/volume-controller">https://github.com/laisc7301/volume-controller</a></p>
]]></content>
  </entry>
</search>
